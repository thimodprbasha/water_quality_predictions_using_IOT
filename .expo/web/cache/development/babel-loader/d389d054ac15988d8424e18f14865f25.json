{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\TestingPage.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport default function App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#001A4B', '#002B7B'],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.HeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Quality test\"), React.createElement(Text, {\n    style: styles.HeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Water quality results\"))), React.createElement(View, {\n    style: styles.pieChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(ProgressChart, {\n    data: data,\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    strokeWidth: 16,\n    radius: 32,\n    chartConfig: {\n      backgroundColor: \"transparent\",\n      backgroundGradientFrom: \"transparent\",\n      backgroundGradientTo: \"transparent\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(3, 0, 150, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(2, 0, 88, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#fff\"\n      }\n    },\n    hideLegend: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\nvar chartConfig = {\n  backgroundGradientFrom: \"#1E2923\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"#08130D\",\n  backgroundGradientToOpacity: 0.5,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(26, 255, 146, \" + opacity + \")\";\n  },\n  strokeWidth: 2,\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false\n};\nvar data = {\n  labels: [\"pH\", \"Temp\", \"Turbidity\"],\n  data: [0.4, 0.6, 0.8]\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"#EFFBFF\"\n  },\n  headContainer: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width,\n    height: 100\n  },\n  headContent: {\n    flex: 1\n  },\n  ChartHead: {\n    textAlign: \"left\"\n  },\n  HeadText: {\n    position: \"absolute\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: 60,\n    left: 30\n  },\n  HeadTextCap: {\n    position: \"absolute\",\n    fontSize: 12,\n    color: \"#D1E1FF\",\n    top: 90,\n    left: 30\n  },\n  image: {\n    marginBottom: 40,\n    height: 100,\n    widht: 100\n  },\n  pieChart: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    paddingTop: 250\n  },\n  loginBtn: {\n    width: \"40%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    bottom: 50,\n    backgroundColor: \"#00FFFF\",\n    marginBottom: 10\n  },\n  registerBtn: {\n    width: \"60%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    bottom: 50,\n    backgroundColor: \"transparent\"\n  },\n  logo: {\n    width: 100,\n    height: 100\n  },\n  logoContainer: {\n    position: 'absolute',\n    top: 200\n  },\n  logoText: {\n    paddingTop: 15,\n    color: 'white',\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  registerText: {\n    color: \"#00FFFF\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/TestingPage.js"],"names":["StatusBar","React","useState","LinearGradient","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","styles","container","headContainer","x","y","headContent","HeadText","HeadTextCap","pieChart","data","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","chartConfig","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","labels","StyleSheet","create","flex","alignItems","justifyContent","height","ChartHead","textAlign","position","fontSize","fontWeight","top","left","image","marginBottom","widht","postion","paddingTop","loginBtn","bottom","registerBtn","logo","logoContainer","logoText","loginText","registerText"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\n// import CircleChart from \"react-native-circle-chart\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ImageBackground\r\n} from \"react-native\";\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart\r\n} from \"react-native-chart-kit\";\r\n\r\nimport { Dimensions  } from \"react-native\";\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    \r\n    <View style = {styles.container}>\r\n      <View style = {styles.headContainer}>\r\n        {/* <Text style = {styles.HeadText}>Dashboard</Text> */}\r\n        <LinearGradient\r\n        // Button Linear Gradient\r\n        colors={['#001A4B', '#002B7B']}\r\n        start={{ x: 1, y: 1 }}\r\n        end={{ x: 0, y: 1 }}\r\n        style={styles.headContent}\r\n        >\r\n        <Text style={styles.HeadText}>Quality test</Text>\r\n        <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n      </LinearGradient>\r\n      </View>\r\n      \r\n      <View style = {styles.pieChart}>\r\n        {/* <Text style = {styles.ChartHead}>Stats</Text> */}\r\n        <ProgressChart\r\n        data={data}\r\n        width={Dimensions.get(\"window\").width}\r\n        height={220}\r\n        strokeWidth={16}\r\n        radius={32}\r\n        chartConfig={{\r\n          backgroundColor: \"transparent\",\r\n          backgroundGradientFrom: \"transparent\",\r\n          backgroundGradientTo: \"transparent\",\r\n          decimalPlaces: 2, // optional, defaults to 2dp\r\n          color: (opacity = 1) => `rgba(3, 0, 150, ${opacity})`,\r\n          labelColor: (opacity = 1) => `rgba(2, 0, 88, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16,\r\n\r\n          },\r\n          propsForDots: {\r\n            r: \"6\",\r\n            strokeWidth: \"2\",\r\n            stroke: \"#fff\"\r\n          }\r\n        }}\r\n        hideLegend={false}\r\n      />\r\n        {/* <LineChart\r\n          data={{\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100\r\n                ]\r\n              }\r\n            ]\r\n          }}\r\n          width={Dimensions.get(\"window\").width} // from react-native\r\n          height={180}\r\n          yAxisLabel=\"WQ \"\r\n          // yAxisSuffix=\"k\"\r\n          yAxisInterval={1} // optional, defaults to 1\r\n          chartConfig={{\r\n            backgroundColor: \"#FFFFFF\",\r\n            backgroundGradientFrom: \"#0036DF\",\r\n            backgroundGradientTo: \"#001862\",\r\n            decimalPlaces: 2, // optional, defaults to 2dp\r\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            style: {\r\n              borderRadius: 16,\r\n              \r\n            },\r\n            propsForDots: {\r\n              r: \"6\",\r\n              strokeWidth: \"2\",\r\n              stroke: \"#fff\"\r\n            }\r\n          }}\r\n          bezier\r\n          style={{\r\n            marginVertical: 10,\r\n            borderRadius: 0,\r\n            padding:0,\r\n          }}\r\n        /> */}\r\n      </View>\r\n     {/* <View style = {styles.logoContainer}>\r\n      //                  <Image style = {styles.logo}  source={require('../assets/jalaread-logo.png')}/>\r\n      //                  <Text style={styles.logoText}>JALAread.</Text>\r\n      // </View>\r\n\r\n      //   <StatusBar style=\"auto\" />\r\n\r\n      //   <TouchableOpacity style={styles.loginBtn} >\r\n      //     <Text style={styles.loginText}>Login</Text>\r\n      //   </TouchableOpacity>\r\n      //   <TouchableOpacity style={styles.registerBtn} >\r\n      //     <Text style={styles.registerText}>Register</Text>\r\n      //   </TouchableOpacity> */}\r\n    </View>\r\n    \r\n  );\r\n}\r\n\r\nconst chartConfig = {\r\n  backgroundGradientFrom: \"#1E2923\",\r\n  backgroundGradientFromOpacity: 0,\r\n  backgroundGradientTo: \"#08130D\",\r\n  backgroundGradientToOpacity: 0.5,\r\n  color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n  strokeWidth: 2, // optional, default 3\r\n  barPercentage: 0.5,\r\n  useShadowColorFromDataset: false // optional\r\n};\r\n\r\nconst data = {\r\n  labels: [\"pH\", \"Temp\", \"Turbidity\"], // optional\r\n  data: [0.4, 0.6, 0.8]\r\n};\r\n\r\n// const result = await CircleChart.multiply(3, 7);\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  \r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"#EFFBFF\",\r\n    },\r\n    headContainer: {\r\n        flex: 1,\r\n        width:Dimensions.get(\"window\").width,\r\n        height:100,\r\n    },\r\n    headContent: {\r\n        flex: 1,\r\n        // width:Dimensions.get(\"window\").width,\r\n        // height:100,\r\n    },\r\n\r\n    ChartHead:{\r\n      textAlign: \"left\"\r\n    },\r\n\r\n    HeadText:{\r\n      position:\"absolute\",\r\n      // font:\"ubuntu\",\r\n      fontSize:22,\r\n      fontWeight:\"bold\",\r\n      color:\"white\",\r\n      top:60,\r\n      left:30,\r\n    },\r\n\r\n    HeadTextCap:{\r\n      position:\"absolute\",\r\n      fontSize:12,\r\n      // fontWeight:\"bold\",\r\n      color:\"#D1E1FF\",\r\n      top:90,\r\n      left:30,\r\n    },\r\n\r\n    image: {\r\n        marginBottom: 40,\r\n        height:100,\r\n        widht:100\r\n    },\r\n\r\n    pieChart:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n     \r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"transparent\",\r\n        paddingTop: 250,\r\n    },\r\n\r\n    loginBtn: {\r\n        width: \"40%\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        bottom: 50,\r\n        backgroundColor: \"#00FFFF\",\r\n        marginBottom: 10\r\n    },\r\n    registerBtn: {\r\n        width: \"60%\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        bottom: 50,\r\n        backgroundColor: \"transparent\",\r\n    },\r\n    logo: {\r\n        width:100,\r\n        height:100,\r\n    },\r\n    logoContainer:{\r\n        position: 'absolute',\r\n        top: 200,\r\n        \r\n        // color: \"fff\"\r\n    },\r\n    logoText: {\r\n        paddingTop: 15,\r\n        color: 'white',\r\n        fontSize : 20,\r\n        // fontStyle: fontStyles[],\r\n        fontWeight: \"bold\",\r\n    },\r\n    loginText: {\r\n        color:\"black\",\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        \r\n    },\r\n    registerText: {\r\n        color:\"#00FFFF\",\r\n        fontSize: 18,\r\n        fontWeight: \"bold\"\r\n    }\r\n\r\n});"]},"metadata":{},"sourceType":"module"}