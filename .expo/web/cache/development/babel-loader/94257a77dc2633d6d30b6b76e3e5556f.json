{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\WaterTestingScreen.js\",\n    _this = this;\n\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport * as data from \"../assets/TestsResults.json\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nexport default function App() {\n  var dataPie = {\n    labels: [, \"pH\", \"Temp\", \"Turbidity\", \"Conductivity\"],\n    data: [, 32 * 2.14 / 100, 32 / 100, 32 * 2 / 100, 32 * 2.85 / 100]\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#001A4B', '#002B7B'],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.HeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Quality test\"), React.createElement(Text, {\n    style: styles.HeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Water quality results\"))), React.createElement(View, {\n    style: styles.PhButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.PhButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"pH\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }), data.value_params.ph))), React.createElement(View, {\n    style: styles.TempButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.TempButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Temp\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), data.value_params.temp))), React.createElement(View, {\n    style: styles.TurbidityButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.TurbidityButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Turbidity\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }\n  }), data.value_params.turbidity))), React.createElement(View, {\n    style: styles.CondctButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.CondctButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Conductivity\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }), data.value_params.conduct))), React.createElement(View, {\n    style: styles.pieChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, data.location), React.createElement(ProgressChart, {\n    data: dataPie,\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    strokeWidth: 12,\n    radius: 27,\n    chartConfig: {\n      backgroundColor: \"transparent\",\n      backgroundGradientFrom: \"transparent\",\n      backgroundGradientTo: \"transparent\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(3, 0, 150, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(2, 0, 88, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#fff\"\n      }\n    },\n    hideLegend: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \" \"))), \")\");\n}\n;\n\nvar AppButton = function AppButton(_ref) {\n  var onPress = _ref.onPress,\n      title = _ref.title;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.appButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nvar MyActivityIndicator = function MyActivityIndicator() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 8\n    }\n  }, \"//size can be \\\"small\\\" or \\\"large\\\"\", React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  HeadText: {\n    position: \"absolute\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: 63,\n    left: 30\n  },\n  HeadTextCap: {\n    position: \"absolute\",\n    fontSize: 12,\n    color: \"#D1E1FF\",\n    top: 93,\n    left: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"#EFFBFF\"\n  },\n  PhButtonContainer: {\n    postion: \"absolute\",\n    bottom: 0,\n    top: 170,\n    left: -80,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TempButtonContainer: {\n    postion: \"absolute\",\n    bottom: 0,\n    top: 170,\n    left: -80,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TurbidityButtonContainer: {\n    postion: \"absolute\",\n    bottom: 0,\n    top: -10,\n    left: 70,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  CondctButtonContainer: {\n    postion: \"absolute\",\n    bottom: 0,\n    top: -10,\n    left: 100,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  headContainer: {\n    flex: 1,\n    position: \"absolute\",\n    width: Dimensions.get(\"window\").width,\n    height: \"20%\"\n  },\n  headContent: {\n    flex: 1\n  },\n  PhButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  TempButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  TurbidityButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  CondctButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  pieChart: {\n    postion: \"absolute\",\n    bottom: 100,\n    left: -27,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/WaterTestingScreen.js"],"names":["React","useEffect","useState","LinearGradient","Spinner","data","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","dataPie","labels","flex","padding","flexDirection","justifyContent","styles","headContainer","x","y","headContent","HeadText","HeadTextCap","PhButtonContainer","PhButton","value_params","ph","TempButtonContainer","TempButton","temp","TurbidityButtonContainer","TurbidityButton","turbidity","CondctButtonContainer","CondctButton","conduct","pieChart","location","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","AppButton","onPress","title","appButtonContainer","appButtonText","MyActivityIndicator","StyleSheet","create","elevation","paddingVertical","paddingHorizontal","fontSize","fontWeight","alignSelf","textTransform","position","top","left","container","alignItems","postion","bottom","marginTop","height","borderWidth","borderTopWidth","borderLeftWidth","borderColor","borderBottomWidth","borderRightWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList,Button, Text, View, StyleSheet,ActivityIndicator } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\n// import TestsResults from '../assets/TestsResults.json';\r\nimport * as data from '../assets/TestsResults.json';\r\nimport {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n\r\n  import { Dimensions,TouchableHighlight  } from \"react-native\";\r\n\r\nexport default function App() {\r\n\r\n    \r\n  // const [isLoading, setLoading] = useState(true);\r\n  // const [data, setData] = useState([]);\r\n  // console.log(data);\r\n\r\n  \r\n  // useEffect(() => {\r\n  //   fetch(TestsResults)\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setData(json))\r\n  //     .catch((error) => console.error(error))\r\n  //     .finally(() => setLoading(false));\r\n  // }, []);\r\n\r\n  const dataPie = {\r\n    labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n    data: [,(32*2.14)/100, 32/100, (32*2)/100, (32*2.85)/100]\r\n  };\r\n\r\n//   const dataPie = {\r\n//     labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n//     data: [,data.ph, data.temp, data.turbidity, data.conductivity]\r\n//   };\r\n\r\n\r\n  return (\r\n\r\n    <View style={{ flex: 1, padding: 0 }}>\r\n      {/* {isLoading ? <Text>Loading...</Text> :  */}         \r\n          <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\r\n\r\n        <View style = {styles.headContainer}>\r\n            <LinearGradient\r\n                // Button Linear Gradient\r\n                colors={['#001A4B', '#002B7B']}\r\n                start={{ x: 1, y: 1 }}\r\n                end={{ x: 0, y: 1 }}\r\n                style={styles.headContent}\r\n                >\r\n                <Text style={styles.HeadText}>Quality test</Text>\r\n                <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n            </LinearGradient>\r\n        </View>\r\n\r\n        <View style = {styles.PhButtonContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.PhButton}>\r\n                pH<br/>\r\n                {data.value_params.ph}\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n        <View style = {styles.TempButtonContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.TempButton}>\r\n                Temp<br/>\r\n                {data.value_params.temp}\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n        <View style = {styles.TurbidityButtonContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.TurbidityButton}>\r\n                Turbidity<br/>\r\n                {data.value_params.turbidity}\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n        <View style = {styles.CondctButtonContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.CondctButton}>\r\n                Conductivity<br/>\r\n                {data.value_params.conduct}\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n          \r\n          <View style = {styles.pieChart}>\r\n                <Text>{data.location}</Text>\r\n                <ProgressChart\r\n                data={dataPie}\r\n                width={Dimensions.get(\"window\").width}\r\n                height={220}\r\n                strokeWidth={12}\r\n                radius={27}\r\n                chartConfig={{\r\n                    backgroundColor: \"transparent\",\r\n                    backgroundGradientFrom: \"transparent\",\r\n                    backgroundGradientTo: \"transparent\",\r\n                    decimalPlaces: 2, // optional, defaults to 2dp\r\n                    color: (opacity = 1) => `rgba(3, 0, 150, ${opacity})`,\r\n                    labelColor: (opacity = 1) => `rgba(2, 0, 88, ${opacity})`,\r\n                    style: {\r\n                    borderRadius: 16,\r\n                    },\r\n                    propsForDots: {\r\n                    r: \"6\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#fff\"\r\n                    }\r\n                }}\r\n                hideLegend={false}\r\n                />\r\n\r\n                {/* <Button\r\n                    onPress={this._onPressButton}\r\n                    title=\"This looks great!\"\r\n                /> */}\r\n\r\n                \r\n\r\n                <Text> </Text>\r\n\r\n            </View>  \r\n        </View>\r\n      )\r\n    </View>\r\n  );\r\n};\r\n\r\n  // add this to a button\r\n  const AppButton = ({ onPress, title }) => (\r\n    <TouchableOpacity onPress={onPress} style={styles.appButtonContainer}>\r\n      <Text style={styles.appButtonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const MyActivityIndicator = () => {\r\n\treturn (\r\n      \t<View style={{ flex: 1, justifyContent: \"center\"}}>\r\n      \t\t//size can be \"small\" or \"large\"\r\n\t\t\t<ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n      \t</View>\r\n    );\r\n}\r\n\r\n// export default MyActivityIndicator;\r\n\r\n  const styles = StyleSheet.create({\r\n\r\n    appButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n      },\r\n      appButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n      },\r\n\r\n    HeadText:{\r\n        position:\"absolute\",\r\n        // fontFamily:\"ubuntu\",\r\n        fontSize:22,\r\n        fontWeight:\"bold\",\r\n        color:\"white\",\r\n        top:63,\r\n        left:30,\r\n      },\r\n  \r\n      HeadTextCap:{\r\n        position:\"absolute\",\r\n        fontSize:12,\r\n        // fontWeight:\"bold\",\r\n        color:\"#D1E1FF\",\r\n        top:93,\r\n        left:30,\r\n      },\r\n\r\n      container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"#EFFBFF\",\r\n    },\r\n\r\n    PhButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      bottom:0,\r\n      top:170,\r\n      left:-80,\r\n      alignItems: \"center\",\r\n      justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    TempButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      bottom:0,\r\n      top:170,\r\n      left:-80,\r\n      alignItems: \"center\",\r\n      justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    TurbidityButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      bottom:0,\r\n      top:-10,\r\n      left:70,\r\n      alignItems: \"center\",\r\n      justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    CondctButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      bottom:0,\r\n      top:-10,\r\n      left:100,\r\n      alignItems: \"center\",\r\n      justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n\r\n    headContainer: {\r\n        flex: 1,\r\n        position:\"absolute\",\r\n        width:Dimensions.get(\"window\").width,\r\n        height:\"20%\",\r\n    },\r\n    headContent: {\r\n        flex: 1,\r\n        // width:Dimensions.get(\"window\").width,\r\n        // height: \"10%\",\r\n    },\r\n\r\n    PhButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderTopWidth:0,\r\n      borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    TempButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderBottomWidth:0,\r\n      borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    TurbidityButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderTopWidth:0,\r\n      borderRightWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    CondctButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderBottomWidth:0,\r\n      borderRightWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n\r\n    pieChart:{\r\n        // flex: 1,\r\n        postion:\"absolute\",\r\n        bottom:100,\r\n        left:-27,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"transparent\",\r\n        marginTop: 100,\r\n        // paddingTop: 200,\r\n      },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}