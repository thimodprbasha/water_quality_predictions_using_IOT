{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\TestingSensorPage.js\",\n    _this = this;\n\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport * as data from \"../assets/sensor-connectivity.json\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function TestingSensorPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var pressHandler = function pressHandler() {\n    navigation.navigate('TestingLoadingPage');\n  };\n\n  var getSensor = function getSensor(isConnected) {\n    if (isConnected == true) {\n      return 1;\n    }\n\n    if (isConnected == false) {\n      return 2;\n    }\n  };\n\n  var sensorTest = function sensorTest() {\n    if (data.Turbidity == false || data.condcticty == false || data.condcticty == false || data.ph == false) {\n      return true;\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#020058', '#030096'],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('LocationInput');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back-arrow.png\"),\n    style: styles.BackArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  })), React.createElement(Text, {\n    style: styles.HeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Quality Test\"), React.createElement(Text, {\n    style: styles.HeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Water quality results\"))), React.createElement(View, {\n    style: styles.InnerHeadContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.InnerHeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Sensor testing\"), React.createElement(Text, {\n    style: styles.InnerHeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"make sure all the sensors are  in water\")), React.createElement(View, {\n    style: styles.Instruction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [getSensor(data.temp) == 1 ? styles.TestPass : styles.CheckButton, getSensor(data.temp) == 2 ? styles.TestFail : styles.CheckButton, styles.CheckButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/check-circle-white.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Tempurature sensor\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 72\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckBtnTxtCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 77\n    }\n  }, \"Dics about it\"))), React.createElement(TouchableOpacity, {\n    style: [getSensor(data.ph) == 1 ? styles.TestPass : styles.CheckButton, getSensor(data.ph) == 2 ? styles.TestFail : styles.CheckButton, styles.CheckButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/check-circle-white.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"pH sensor\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 63\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckBtnTxtCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 68\n    }\n  }, \"Dics about it\"))), React.createElement(TouchableOpacity, {\n    style: [getSensor(data.Turbidity) == 1 ? styles.TestPass : styles.CheckButton, getSensor(data.Turbidity) == 2 ? styles.TestFail : styles.CheckButton, styles.CheckButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/check-circle-white.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Turbidity sensor\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 70\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckBtnTxtCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 75\n    }\n  }, \"Dics about it\"))), React.createElement(TouchableOpacity, {\n    style: [getSensor(data.condcticty) == 1 ? styles.TestPass : styles.CheckButton, getSensor(data.condcticty) == 2 ? styles.TestFail : styles.CheckButton, styles.CheckButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/check-circle-white.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Conductivity sensor\", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 73\n    }\n  }), React.createElement(Text, {\n    style: styles.CheckBtnTxtCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 78\n    }\n  }, \"Dics about it\")))), React.createElement(View, {\n    style: styles.BottomButtomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [sensorTest() == true ? styles.testedSensorsFailed : styles.BottomButtom, sensorTest() == null ? styles.testedSensorsPassed : styles.BottomButtom, styles.BottomButtom],\n    onPress: pressHandler,\n    disabled: sensorTest(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.BottomButtomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Next\")), React.createElement(Text, {\n    style: styles.BottomButtomCapText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"How to use this device? \", React.createElement(Text, {\n    style: {\n      color: '#FF7B8A'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 78\n    }\n  }, \"More info\")))));\n}\n;\n\nvar AppButton = function AppButton(_ref2) {\n  var onPress = _ref2.onPress,\n      title = _ref2.title;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.appButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nvar MyActivityIndicator = function MyActivityIndicator() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 8\n    }\n  }, \"//size can be \\\"small\\\" or \\\"large\\\"\", React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  BottomButtomContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: \"transparent\",\n    bottom: '0%',\n    height: '20%',\n    marginTop: 0\n  },\n  testedSensorsFailed: {\n    backgroundColor: \"#B2B2B2\"\n  },\n  testedSensorsPassed: {\n    backgroundColor: \"#030082\"\n  },\n  BottomButtom: {\n    width: \"40%\",\n    borderRadius: 11,\n    height: 45,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  BottomButtomText: {\n    fontSize: 16,\n    fontWeight: 600,\n    color: 'white',\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  BottomButtomCapText: {\n    fontSize: 14,\n    fontWeight: 600,\n    color: '#515151',\n    marginTop: 10\n  },\n  BottomButtomCapTextLink: {\n    color: '#FF00F5'\n  },\n  TestFail: {\n    backgroundColor: \"#EAEAEA\",\n    borderColor: '#CECECE'\n  },\n  TestPass: {\n    backgroundColor: \"#A8FFD5\",\n    borderColor: '#7AFFBF'\n  },\n  CheckButton: {\n    width: \"70%\",\n    borderRadius: 11,\n    height: 60,\n    alignItems: \"center\",\n    borderWidth: 2,\n    flexDirection: 'row',\n    margin: '2%'\n  },\n  CheckButtonText: {\n    fontSize: 18,\n    fontWeight: 600,\n    color: '#00397C',\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    lineHeight: 18\n  },\n  HeadText: {\n    position: \"absolute\",\n    fontFamily: \"SF Pro Rounded\",\n    fontSize: 23,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: 73,\n    left: 30\n  },\n  CheckBtnTxtCap: {\n    fontSize: 13,\n    color: '#626263',\n    fontFamily: \"SF Pro Rounded\"\n  },\n  HeadTextCap: {\n    position: \"absolute\",\n    fontFamily: \"SF Pro Rounded\",\n    fontSize: 14,\n    color: \"#D1E1FF\",\n    top: 103,\n    left: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"#EFFBFF\"\n  },\n  headContainer: {\n    flex: 1,\n    position: \"absolute\",\n    width: Dimensions.get(\"window\").width,\n    height: \"26%\"\n  },\n  headContent: {\n    flex: 1\n  },\n  InnerHeadContent: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: \"transparent\",\n    top: '20%',\n    height: '10%',\n    marginTop: '5%',\n    marginBottom: '5%',\n    backgroundColor: \"white\",\n    borderStyle: 'solid',\n    borderWidth: 0,\n    borderRadius: 25,\n    paddingTop: 50\n  },\n  InnerHeadText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#00397C',\n    postion: 'absolute',\n    bottom: 200\n  },\n  InnerHeadTextCap: {\n    fontSize: 14,\n    fontWeight: 500,\n    fontFamily: 'Roboto',\n    color: '#626263',\n    marginTop: 0,\n    paddingLeft: 80,\n    paddingRight: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: 'center'\n  },\n  Instruction: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: \"transparent\",\n    bottom: '-10%',\n    height: '40%',\n    marginRight: 0,\n    marginTop: '5%'\n  },\n  InstructionNum: {\n    postion: 'absolute',\n    flexDirection: 'row',\n    width: '80%',\n    padding: 27,\n    paddingBottom: 15,\n    paddingTop: 10,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  InstructionText: {\n    color: 'rgba(81, 81, 81, 0.86)',\n    fontSize: 17,\n    fontWeight: '700'\n  },\n  StartLogo: {\n    width: 25,\n    height: 25,\n    marginRight: '7%',\n    marginLeft: '7%',\n    marginTop: 2\n  },\n  BackArrow: {\n    width: 10,\n    height: 17,\n    marginLeft: 30,\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/TestingSensorPage.js"],"names":["React","useEffect","useState","LinearGradient","Spinner","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","data","TestingSensorPage","navigation","pressHandler","navigate","getSensor","isConnected","sensorTest","Turbidity","condcticty","ph","flex","padding","backgroundColor","flexDirection","justifyContent","styles","headContainer","x","y","headContent","require","BackArrow","HeadText","HeadTextCap","InnerHeadContent","InnerHeadText","InnerHeadTextCap","Instruction","temp","TestPass","CheckButton","TestFail","StartLogo","CheckButtonText","CheckBtnTxtCap","BottomButtomContainer","testedSensorsFailed","BottomButtom","testedSensorsPassed","BottomButtomText","BottomButtomCapText","color","AppButton","onPress","title","appButtonContainer","appButtonText","MyActivityIndicator","StyleSheet","create","elevation","borderRadius","paddingVertical","paddingHorizontal","fontSize","fontWeight","alignSelf","textTransform","postion","alignItems","bottom","height","marginTop","width","BottomButtomCapTextLink","borderColor","borderWidth","margin","lineHeight","position","fontFamily","top","left","container","Dimensions","get","marginBottom","borderStyle","paddingTop","paddingLeft","paddingRight","textAlign","marginRight","InstructionNum","paddingBottom","InstructionText","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList,Button, Text, View, StyleSheet,ActivityIndicator } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    \r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n  import * as data from '../assets/sensor-connectivity.json';\r\n\r\n\r\n  import { Dimensions,TouchableHighlight, Image,TouchableOpacity, } from \"react-native\";\r\n\r\n  export default function TestingSensorPage({navigation}) {\r\n\r\n    const pressHandler =() =>{\r\n      navigation.navigate('TestingLoadingPage');\r\n  }\r\n\r\n  // const [isLoading, setLoading] = useState(true);\r\n  // const [data, setData] = useState([]);\r\n  // console.log(data);\r\n\r\n  // useEffect(() => {\r\n  //   fetch('https://raw.githubusercontent.com/adhithiravi/React-Hooks-Examples/master/testAPI.json')\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setData(json))\r\n  //     .catch((error) => console.error(error))\r\n  //     .finally(() => setLoading(false));\r\n  // }, []);\r\n\r\n  // const dataPie = {\r\n  //   labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n  //   data: [,0.4, 0.7, 0.8, 0.3]\r\n  // };\r\n\r\n//   const dataPie = {\r\n//     labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n//     data: [,data.ph, data.temp, data.turbidity, data.conductivity]\r\n//   };\r\n\r\n\r\nconst getSensor = (isConnected) => {\r\n  if(isConnected == true){\r\n    return 1;\r\n  }\r\n  if(isConnected == false){\r\n    return 2;\r\n  }\r\n  \r\n}\r\n\r\nconst sensorTest = () => {\r\n  if(data.Turbidity == false || data.condcticty == false || data.condcticty == false || data.ph == false){\r\n    return true;\r\n  }\r\n}\r\n\r\n  return (\r\n\r\n    <View style={{ flex: 1, padding: 0, backgroundColor:\"white\"}}>\r\n         \r\n          <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\r\n\r\n        <View style = {styles.headContainer}>\r\n            <LinearGradient\r\n                // Button Linear Gradient\r\n                colors={['#020058', '#030096']} \r\n                start={{ x: 1, y: 1 }}\r\n                end={{ x: 0, y: 1 }}\r\n                style={styles.headContent}\r\n                >\r\n                <TouchableOpacity onPress={() => navigation.navigate('LocationInput')}>\r\n                  <Image source={require('../assets/back-arrow.png')} style = {styles.BackArrow} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.HeadText}>Quality Test</Text>\r\n                <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n            </LinearGradient>\r\n        </View>\r\n\r\n        <View style = {styles.InnerHeadContent}>\r\n                \r\n            <Text style = {styles.InnerHeadText}>Sensor testing</Text>\r\n            <Text style={styles.InnerHeadTextCap}>make sure all the sensors are  in water</Text>\r\n        </View>\r\n\r\n          <View style = {styles.Instruction}>\r\n      \r\n            <TouchableOpacity style={[        \r\n              (getSensor(data.temp) == 1 ) ? styles.TestPass:styles.CheckButton,\r\n              (getSensor(data.temp) == 2 ) ? styles.TestFail:styles.CheckButton,    \r\n              styles.CheckButton]} >\r\n                <Image source={require('../assets/check-circle-white.png')} style = {styles.StartLogo} />\r\n                <Text style={styles.CheckButtonText}>Tempurature sensor<br/><Text style={styles.CheckBtnTxtCap}>Dics about it</Text></Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={[ \r\n              (getSensor(data.ph) == 1 ) ? styles.TestPass:styles.CheckButton,\r\n              (getSensor(data.ph) == 2 ) ? styles.TestFail:styles.CheckButton,\r\n                styles.CheckButton]} >\r\n                <Image source={require('../assets/check-circle-white.png')} style = {styles.StartLogo} />\r\n                <Text style={styles.CheckButtonText}>pH sensor<br/><Text style={styles.CheckBtnTxtCap}>Dics about it</Text></Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={[\r\n              (getSensor(data.Turbidity) == 1 ) ? styles.TestPass:styles.CheckButton,\r\n              (getSensor(data.Turbidity) == 2 ) ? styles.TestFail:styles.CheckButton,\r\n                styles.CheckButton]} >\r\n                <Image source={require('../assets/check-circle-white.png')} style = {styles.StartLogo} />\r\n                <Text style={styles.CheckButtonText}>Turbidity sensor<br/><Text style={styles.CheckBtnTxtCap}>Dics about it</Text></Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={[\r\n              (getSensor(data.condcticty) == 1 ) ? styles.TestPass:styles.CheckButton,\r\n              (getSensor(data.condcticty) == 2 ) ? styles.TestFail:styles.CheckButton,\r\n                styles.CheckButton]} >\r\n                <Image source={require('../assets/check-circle-white.png')} style = {styles.StartLogo} />\r\n                <Text style={styles.CheckButtonText}>Conductivity sensor<br/><Text style={styles.CheckBtnTxtCap}>Dics about it</Text></Text>\r\n            </TouchableOpacity>\r\n            \r\n          </View>\r\n          <View style = {styles.BottomButtomContainer}>\r\n            <TouchableOpacity style={[\r\n              (sensorTest() == true ) ? styles.testedSensorsFailed:styles.BottomButtom,\r\n              (sensorTest() == null ) ? styles.testedSensorsPassed:styles.BottomButtom,\r\n              styles.BottomButtom]}  onPress={pressHandler} disabled={sensorTest()}>\r\n              <Text style={styles.BottomButtomText}>Next</Text>\r\n            </TouchableOpacity>\r\n            <Text style={styles.BottomButtomCapText}>How to use this device? <Text style={{color:'#FF7B8A'}}>More info</Text></Text>\r\n          </View>\r\n\r\n            \r\n        </View>\r\n     \r\n    </View>\r\n  );\r\n};\r\n\r\n  const AppButton = ({ onPress, title }) => (\r\n    <TouchableOpacity onPress={onPress} style={styles.appButtonContainer}>\r\n      <Text style={styles.appButtonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const MyActivityIndicator = () => {\r\n\treturn (\r\n      \t<View style={{ flex: 1, justifyContent: \"center\"}}>\r\n      \t\t//size can be \"small\" or \"large\"\r\n\t\t\t<ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n      \t</View>\r\n    );\r\n}\r\n\r\n// export default MyActivityIndicator;\r\n\r\n  const styles = StyleSheet.create({\r\n\r\n    appButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n      },\r\n      appButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n      },\r\n\r\n      BottomButtomContainer:{\r\n        // flex: 1,\r\n        postion:\"absolute\",\r\n        // bottom:100,\r\n        // left:-27,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center',\r\n        backgroundColor: \"transparent\",\r\n        bottom:'0%',\r\n        height:'20%',\r\n        // marginTop:'5%',\r\n        // marginBottom:'5%',\r\n        // borderWidth:3,\r\n        marginTop:0,\r\n        \r\n        // paddingTop: 200,\r\n      },\r\n\r\n      testedSensorsFailed:{\r\n        backgroundColor: \"#B2B2B2\",\r\n      },\r\n      testedSensorsPassed:{\r\n        backgroundColor: \"#030082\",\r\n      },\r\n\r\n      BottomButtom: {\r\n        width: \"40%\",\r\n        borderRadius: 11,\r\n        height: 45,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        // backgroundColor: \"#030082\",\r\n        \r\n        // marginBottom: 0\r\n    },\r\n\r\n    \r\n\r\n      BottomButtomText:{\r\n        fontSize:16,\r\n        fontWeight:600,\r\n        color:'white',\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        \r\n      },\r\n\r\n      BottomButtomCapText:{\r\n        fontSize:14,\r\n        fontWeight:600,\r\n        color:'#515151',\r\n        marginTop:10,\r\n      },\r\n\r\n      BottomButtomCapTextLink:{\r\n        color:'#FF00F5'\r\n      },\r\n\r\n      TestFail:{\r\n        backgroundColor: \"#EAEAEA\",\r\n        borderColor:'#CECECE',\r\n      },\r\n      TestPass:{\r\n        backgroundColor: \"#A8FFD5\",\r\n        borderColor:'#7AFFBF',\r\n      },\r\n\r\n      CheckButton: {\r\n        width: \"70%\",\r\n        borderRadius: 11,\r\n        height: 60,\r\n        alignItems: \"center\",\r\n        // justifyContent: \"center\",\r\n        // backgroundColor: \"#EAEAEA\",\r\n        borderWidth:2,\r\n        // borderColor:'#CECECE',\r\n        // marginBottom: 0\r\n        flexDirection: 'row',\r\n        margin:'2%'\r\n    },\r\n     \r\n\r\n\r\n    CheckButtonText:{\r\n        fontSize:18,\r\n        fontWeight:600,\r\n        color:'#00397C',\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        lineHeight:18\r\n      },\r\n\r\n    HeadText:{\r\n        position:\"absolute\",\r\n        fontFamily:\"SF Pro Rounded\",\r\n        fontSize:23,\r\n        fontWeight:\"bold\",\r\n        color:\"white\",\r\n        top:73,\r\n        left:30,\r\n      },\r\n\r\n      CheckBtnTxtCap:{\r\n          fontSize:13,\r\n          color:'#626263',\r\n          fontFamily:\"SF Pro Rounded\",\r\n      },  \r\n      HeadTextCap:{\r\n        position:\"absolute\",\r\n        fontFamily:\"SF Pro Rounded\",\r\n        fontSize:14,\r\n        // fontWeight:\"bold\",\r\n        color:\"#D1E1FF\",\r\n        top:103,\r\n        left:30,\r\n      },\r\n\r\n      container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"#EFFBFF\",\r\n    },\r\n    headContainer: {\r\n      flex: 1,\r\n      position:\"absolute\",\r\n      width:Dimensions.get(\"window\").width,\r\n      height:\"26%\",\r\n    },\r\n    headContent: {\r\n        flex: 1,\r\n        // width:Dimensions.get(\"window\").width,\r\n        // height: \"10%\",\r\n    },\r\n\r\n    \r\n\r\n    InnerHeadContent:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      // bottom:100,\r\n      // left:-27,\r\n      alignItems: \"center\",\r\n      justifyContent: 'center',\r\n      backgroundColor: \"transparent\",\r\n      top:'20%',\r\n      height:'10%',\r\n      marginTop:'5%',\r\n      marginBottom:'5%',\r\n      backgroundColor:\"white\",\r\n      borderStyle:'solid',\r\n      borderWidth:0,\r\n      // borderColor:\"#030096\",\r\n      borderRadius:25,\r\n      paddingTop:50\r\n      // borderWidth:3,\r\n      \r\n      // paddingTop: 200,\r\n    },\r\n\r\n    InnerHeadText:{\r\n      fontSize:24,\r\n      fontWeight:'bold',\r\n      color:'#00397C',\r\n      postion:'absolute',\r\n      bottom:200,\r\n    },\r\n\r\n      InnerHeadTextCap:{\r\n        fontSize:14,\r\n        fontWeight:500,\r\n        fontFamily:'Roboto',\r\n        color:'#626263',\r\n        marginTop:0,\r\n        paddingLeft:80,\r\n        paddingRight:80,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        textAlign: 'center'\r\n      },\r\n\r\n      Instruction:{\r\n         // flex: 1,\r\n         postion:\"absolute\",\r\n         // bottom:100,\r\n         // left:-27,\r\n         alignItems: \"center\",\r\n         justifyContent: 'center',\r\n         backgroundColor: \"transparent\",\r\n         bottom:'-10%',\r\n         height:'40%',\r\n         marginRight:0,\r\n         marginTop:'5%',\r\n        //  marginBottom:'5%',\r\n        //  borderWidth:3,\r\n         \r\n         // paddingTop: 200,\r\n      },\r\n\r\n\r\n      InstructionNum: {\r\n        postion:'absolute',\r\n        flexDirection: 'row',\r\n        width:'80%',\r\n        // borderWidth: 1,\r\n        padding: 27,\r\n        paddingBottom:15,\r\n        paddingTop:10,\r\n    \r\n        borderColor: 'rgba(0, 0, 0, 0.5)',\r\n        backgroundColor: 'white'\r\n     },\r\n    \r\n\r\n     InstructionText:{\r\n      color:'rgba(81, 81, 81, 0.86)',\r\n      fontSize:17,\r\n      fontWeight:'700',\r\n     },\r\n\r\n     StartLogo:{\r\n      // justifyContent: 'center',\r\n      // alignItems: 'center',\r\n      width:25,\r\n      height:25,\r\n      marginRight:'7%',\r\n      marginLeft:'7%',\r\n      marginTop:2\r\n  },\r\n\r\n  BackArrow:{\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    width:10,\r\n    height:17,\r\n    marginLeft:30,\r\n    marginTop:30,\r\n  },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}