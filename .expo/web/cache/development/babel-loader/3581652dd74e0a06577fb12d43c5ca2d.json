{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\TestingPage.js\",\n    _this = this;\n\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport TestingSensorPage from \"./TestingSensorPage\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function TestingPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var pressHandler = function pressHandler() {\n    navigation.navigate(\"TestingSensorPage\");\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  console.log(data);\n  useEffect(function () {\n    fetch(\"https://raw.githubusercontent.com/adhithiravi/React-Hooks-Examples/master/testAPI.json\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  var dataPie = {\n    labels: [, \"pH\", \"Temp\", \"Turbidity\", \"Conductivity\"],\n    data: [, 0.4, 0.7, 0.8, 0.3]\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [\"#020058\", \"#030096\"],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Dashboard\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back-arrow.png\"),\n    style: styles.BackArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.HeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Quality Test\"), React.createElement(Text, {\n    style: styles.HeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Water quality results\"))), React.createElement(View, {\n    style: styles.InnerHeadContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.InnerHeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Start water test\")), React.createElement(View, {\n    style: styles.Instruction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.InstructionNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/number-1-circle.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.InstructionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Get the water sample, using of a beaker is reccomended\")), React.createElement(View, {\n    style: styles.InstructionNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/number-2-circle.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.InstructionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Prepare a clear space to test the water\")), React.createElement(View, {\n    style: styles.InstructionNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/number-3-circle.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.InstructionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"make sure all the sensors are in water\"))), React.createElement(View, {\n    style: styles.BottomButtomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.BottomButtom,\n    onPress: function onPress() {\n      return navigation.navigate(\"LocationInput\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.BottomButtomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Start\")), React.createElement(Text, {\n    style: styles.BottomButtomCapText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"How to use this device?\", \" \", React.createElement(Text, {\n    style: {\n      color: \"#FF7B8A\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"More info\")))));\n}\n\nvar AppButton = function AppButton(_ref2) {\n  var onPress = _ref2.onPress,\n      title = _ref2.title;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.appButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, title));\n};\n\nvar MyActivityIndicator = function MyActivityIndicator() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, \"//size can be \\\"small\\\" or \\\"large\\\"\", React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  BottomButtomContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    bottom: \"0%\",\n    height: \"20%\",\n    marginTop: 0\n  },\n  BottomButtom: {\n    width: \"40%\",\n    borderRadius: 11,\n    height: 45,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#030082\"\n  },\n  BottomButtomText: {\n    fontSize: 16,\n    fontWeight: 600,\n    color: \"white\",\n    fontFamily: \"SF Pro Rounded\"\n  },\n  BottomButtomCapText: {\n    fontSize: 13,\n    fontWeight: 600,\n    color: \"#515151\",\n    marginTop: 10,\n    fontFamily: \"SF Pro Rounded\"\n  },\n  BottomButtomCapTextLink: {\n    color: \"#FF00F5\"\n  },\n  HeadText: {\n    position: \"absolute\",\n    fontFamily: \"SF Pro Rounded\",\n    fontSize: 23,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: 73,\n    left: 30\n  },\n  HeadTextCap: {\n    position: \"absolute\",\n    fontSize: 14,\n    fontFamily: \"SF Pro Rounded\",\n    color: \"#D1E1FF\",\n    top: 103,\n    left: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#EFFBFF\"\n  },\n  headContainer: {\n    flex: 1,\n    position: \"absolute\",\n    width: Dimensions.get(\"window\").width,\n    fontFamily: \"SF Pro Rounded\",\n    height: \"26%\"\n  },\n  headContent: {\n    flex: 1\n  },\n  InnerHeadContent: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    top: \"20%\",\n    height: \"10%\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    backgroundColor: \"white\",\n    borderStyle: \"solid\",\n    borderWidth: 0,\n    borderRadius: 25,\n    paddingTop: 50\n  },\n  InnerHeadText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#00397C\",\n    postion: \"absolute\",\n    fontFamily: \"SF Pro Rounded\",\n    bottom: 200\n  },\n  Instruction: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    fontFamily: \"SF Pro Rounded\",\n    bottom: \"-10%\",\n    height: \"40%\",\n    marginRight: 0,\n    marginTop: \"5%\"\n  },\n  InstructionNum: {\n    postion: \"absolute\",\n    flexDirection: \"row\",\n    width: \"70%\",\n    padding: 27,\n    paddingBottom: 15,\n    paddingTop: 10,\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\n    backgroundColor: \"white\"\n  },\n  InstructionText: {\n    color: \"rgba(81, 81, 81, 0.86)\",\n    fontFamily: \"SF Pro Rounded\",\n    fontSize: 18,\n    fontWeight: 700\n  },\n  StartLogo: {\n    width: 25,\n    height: 25,\n    marginRight: \"10%\",\n    marginTop: 10\n  },\n  BackArrow: {\n    width: 10,\n    height: 17,\n    marginLeft: 30,\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/TestingPage.js"],"names":["React","useEffect","useState","LinearGradient","TestingSensorPage","Spinner","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","TestingPage","navigation","pressHandler","navigate","isLoading","setLoading","data","setData","console","log","fetch","then","response","json","catch","error","finally","dataPie","labels","flex","padding","backgroundColor","flexDirection","justifyContent","styles","headContainer","x","y","headContent","require","BackArrow","HeadText","HeadTextCap","InnerHeadContent","InnerHeadText","Instruction","InstructionNum","StartLogo","InstructionText","BottomButtomContainer","BottomButtom","BottomButtomText","BottomButtomCapText","color","AppButton","onPress","title","appButtonContainer","appButtonText","MyActivityIndicator","StyleSheet","create","elevation","borderRadius","paddingVertical","paddingHorizontal","fontSize","fontWeight","alignSelf","textTransform","postion","alignItems","bottom","height","marginTop","width","fontFamily","BottomButtomCapTextLink","position","top","left","container","Dimensions","get","marginBottom","borderStyle","borderWidth","paddingTop","marginRight","paddingBottom","borderColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  Button,\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport TestingSensorPage from \"./TestingSensorPage\";\r\nimport Spinner from \"react-native-loading-spinner-overlay\";\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\n\r\nimport {\r\n  Dimensions,\r\n  TouchableHighlight,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nexport default function TestingPage({ navigation }) {\r\n  const pressHandler = () => {\r\n    navigation.navigate(\"TestingSensorPage\");\r\n  };\r\n\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/adhithiravi/React-Hooks-Examples/master/testAPI.json\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const dataPie = {\r\n    labels: [, \"pH\", \"Temp\", \"Turbidity\", \"Conductivity\"], // optional\r\n    data: [, 0.4, 0.7, 0.8, 0.3],\r\n  };\r\n\r\n  //   const dataPie = {\r\n  //     labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n  //     data: [,data.ph, data.temp, data.turbidity, data.conductivity]\r\n  //   };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 0, backgroundColor: \"white\" }}>\r\n      {isLoading ? (\r\n        <Text>Loading...</Text>\r\n      ) : (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <View style={styles.headContainer}>\r\n            <LinearGradient\r\n              // Button Linear Gradient\r\n              colors={[\"#020058\", \"#030096\"]}\r\n              start={{ x: 1, y: 1 }}\r\n              end={{ x: 0, y: 1 }}\r\n              style={styles.headContent}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"Dashboard\")}\r\n              >\r\n                <Image\r\n                  source={require(\"../assets/back-arrow.png\")}\r\n                  style={styles.BackArrow}\r\n                />\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.HeadText}>Quality Test</Text>\r\n              <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n            </LinearGradient>\r\n          </View>\r\n\r\n          <View style={styles.InnerHeadContent}>\r\n            <Text style={styles.InnerHeadText}>Start water test</Text>\r\n          </View>\r\n\r\n          <View style={styles.Instruction}>\r\n            <View style={styles.InstructionNum}>\r\n              <Image\r\n                source={require(\"../assets/number-1-circle.png\")}\r\n                style={styles.StartLogo}\r\n              />\r\n              <Text style={styles.InstructionText}>\r\n                Get the water sample, using of a beaker is reccomended\r\n              </Text>\r\n            </View>\r\n            <View style={styles.InstructionNum}>\r\n              <Image\r\n                source={require(\"../assets/number-2-circle.png\")}\r\n                style={styles.StartLogo}\r\n              />\r\n              <Text style={styles.InstructionText}>\r\n                Prepare a clear space to test the water\r\n              </Text>\r\n            </View>\r\n            <View style={styles.InstructionNum}>\r\n              <Image\r\n                source={require(\"../assets/number-3-circle.png\")}\r\n                style={styles.StartLogo}\r\n              />\r\n              <Text style={styles.InstructionText}>\r\n                make sure all the sensors are in water\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.BottomButtomContainer}>\r\n            <TouchableOpacity\r\n              style={styles.BottomButtom}\r\n              onPress={() => navigation.navigate(\"LocationInput\")}\r\n            >\r\n              <Text style={styles.BottomButtomText}>Start</Text>\r\n            </TouchableOpacity>\r\n            <Text style={styles.BottomButtomCapText}>\r\n              How to use this device?{\" \"}\r\n              <Text style={{ color: \"#FF7B8A\" }}>More info</Text>\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst AppButton = ({ onPress, title }) => (\r\n  <TouchableOpacity onPress={onPress} style={styles.appButtonContainer}>\r\n    <Text style={styles.appButtonText}>{title}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst MyActivityIndicator = () => {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n      //size can be \"small\" or \"large\"\r\n      <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n    </View>\r\n  );\r\n};\r\n\r\n// export default MyActivityIndicator;\r\n\r\nconst styles = StyleSheet.create({\r\n  appButtonContainer: {\r\n    elevation: 8,\r\n    backgroundColor: \"#009688\",\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 12,\r\n  },\r\n  appButtonText: {\r\n    fontSize: 18,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n\r\n  BottomButtomContainer: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    // bottom:100,\r\n    // left:-27,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    bottom: \"0%\",\r\n    height: \"20%\",\r\n    // marginTop:'5%',\r\n    // marginBottom:'5%',\r\n    // borderWidth:3,\r\n    marginTop: 0,\r\n\r\n    // paddingTop: 200,\r\n  },\r\n\r\n  BottomButtom: {\r\n    width: \"40%\",\r\n    borderRadius: 11,\r\n    height: 45,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#030082\",\r\n    // marginBottom: 0\r\n  },\r\n\r\n  BottomButtomText: {\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    color: \"white\",\r\n    fontFamily: \"SF Pro Rounded\",\r\n  },\r\n\r\n  BottomButtomCapText: {\r\n    fontSize: 13,\r\n    fontWeight: 600,\r\n    color: \"#515151\",\r\n    marginTop: 10,\r\n    fontFamily: \"SF Pro Rounded\",\r\n  },\r\n\r\n  BottomButtomCapTextLink: {\r\n    color: \"#FF00F5\",\r\n  },\r\n  HeadText: {\r\n    position: \"absolute\",\r\n    // fontFamily:\"ubuntu\",\r\n    fontFamily: \"SF Pro Rounded\",\r\n    fontSize: 23,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    top: 73,\r\n    left: 30,\r\n  },\r\n\r\n  HeadTextCap: {\r\n    position: \"absolute\",\r\n    fontSize: 14,\r\n    // fontWeight:\"bold\",\r\n    fontFamily: \"SF Pro Rounded\",\r\n    color: \"#D1E1FF\",\r\n    top: 103,\r\n    left: 30,\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    backgroundColor: \"#EFFBFF\",\r\n  },\r\n  headContainer: {\r\n    flex: 1,\r\n    position: \"absolute\",\r\n    width: Dimensions.get(\"window\").width,\r\n    fontFamily: \"SF Pro Rounded\",\r\n    height: \"26%\",\r\n  },\r\n  headContent: {\r\n    flex: 1,\r\n    // width:Dimensions.get(\"window\").width,\r\n    // height: \"10%\",\r\n  },\r\n\r\n  InnerHeadContent: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    // bottom:100,\r\n    // left:-27,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    top: \"20%\",\r\n    height: \"10%\",\r\n    marginTop: \"5%\",\r\n    marginBottom: \"5%\",\r\n    backgroundColor: \"white\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 0,\r\n    // borderColor:\"#030096\",\r\n    borderRadius: 25,\r\n    paddingTop: 50,\r\n    // borderWidth:3,\r\n\r\n    // paddingTop: 200,\r\n  },\r\n\r\n  InnerHeadText: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    color: \"#00397C\",\r\n    postion: \"absolute\",\r\n    fontFamily: \"SF Pro Rounded\",\r\n    bottom: 200,\r\n  },\r\n\r\n  Instruction: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    // bottom:100,\r\n    // left:-27,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    fontFamily: \"SF Pro Rounded\",\r\n    bottom: \"-10%\",\r\n    height: \"40%\",\r\n    marginRight: 0,\r\n    marginTop: \"5%\",\r\n    //  marginBottom:'5%',\r\n    //  borderWidth:3,\r\n\r\n    // paddingTop: 200,\r\n  },\r\n\r\n  InstructionNum: {\r\n    postion: \"absolute\",\r\n    flexDirection: \"row\",\r\n    width: \"70%\",\r\n    // borderWidth: 1,\r\n    padding: 27,\r\n    paddingBottom: 15,\r\n    paddingTop: 10,\r\n\r\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  InstructionText: {\r\n    color: \"rgba(81, 81, 81, 0.86)\",\r\n    fontFamily: \"SF Pro Rounded\",\r\n    fontSize: 18,\r\n    fontWeight: 700,\r\n  },\r\n\r\n  StartLogo: {\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    width: 25,\r\n    height: 25,\r\n    marginRight: \"10%\",\r\n    marginTop: 10,\r\n  },\r\n  BackArrow: {\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    width: 10,\r\n    height: 17,\r\n    marginLeft: 30,\r\n    marginTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}