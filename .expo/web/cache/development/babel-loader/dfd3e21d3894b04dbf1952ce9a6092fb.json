{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\WaterTestingScreen.js\",\n    _this = this;\n\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport * as data from \"../assets/TestsResults.json\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nexport default function WaterTestingScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dataPie = {\n    labels: [, \"pH\", \"Temp\", \"Turbidity\", \"Conductivity\"],\n    data: [, data.value_params.ph * 7.14 / 100, data.value_params.temp / 100, data.value_params.turbidity * 2 / 100, data.value_params.conduct * 2 / 100]\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentDate = _useState2[0],\n      setCurrentDate = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentMonth = _useState4[0],\n      setCurrentMonth = _useState4[1];\n\n  useEffect(function () {\n    var monthNames = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    var date = new Date().getDate();\n    var month = monthNames[new Date().getMonth()];\n    setCurrentDate(date);\n    setCurrentMonth(month);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#EEF2FF', '#ffffff'],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back-arrow-blue.png\"),\n    style: styles.BackArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.HeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Quality test\"), React.createElement(Text, {\n    style: styles.HeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Water quality results\"), React.createElement(Text, {\n    style: styles.Date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, currentDate, React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 56\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 11,\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 61\n    }\n  }, currentMonth)))), React.createElement(View, {\n    style: styles.StatusBarContainerHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.StatusBarHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"vrsgrsesg\")), React.createElement(View, {\n    style: styles.StatusBarContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.StatusBarLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Tempurature\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 66\n    }\n  }), data.value_params.temp, \"\\xB0C\")), React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.StatusBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"pH\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 57\n    }\n  }), data.value_params.ph))), React.createElement(View, {\n    style: styles.StatusBarContainer2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.StatusBarLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Conductivity\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 67\n    }\n  }), data.value_params.conduct, \" (S/m)\")), React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.StatusBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Turbidity\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 64\n    }\n  }), data.value_params.turbidity, \" Ntu\"))), React.createElement(View, {\n    style: styles.previousContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#EEF2FF', '#ffffff'],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/select-arrow-blue.png\"),\n    style: styles.SelectArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.slctCntnrTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Previous results\"), React.createElement(Text, {\n    style: styles.slctCntnrTxtCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Water quality results\"), React.createElement(Text, {\n    style: styles.selectDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, currentDate, React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 62\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 11,\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 67\n    }\n  }, currentMonth)))), React.createElement(View, {\n    style: styles.pieChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(ProgressChart, {\n    data: dataPie,\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    strokeWidth: 12,\n    radius: 27,\n    chartConfig: {\n      backgroundColor: \"transparent\",\n      backgroundGradientFrom: \"transparent\",\n      backgroundGradientTo: \"transparent\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(3, 0, 150, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(2, 0, 88, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#fff\"\n      }\n    },\n    hideLegend: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \" \"))));\n}\n;\n\nvar AppButton = function AppButton(_ref2) {\n  var onPress = _ref2.onPress,\n      title = _ref2.title;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.appButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nvar MyActivityIndicator = function MyActivityIndicator() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 8\n    }\n  }, \"//size can be \\\"small\\\" or \\\"large\\\"\", React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 4\n    }\n  }));\n};\n\nvar deviceWidth = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  BackArrow: {\n    width: 10,\n    height: 17,\n    marginLeft: 30,\n    marginTop: 30\n  },\n  SelectArrow: {\n    position: \"absolute\",\n    width: 8,\n    height: 15,\n    top: \"45%\",\n    right: 30,\n    opacity: 0.7\n  },\n  Date: {\n    position: \"absolute\",\n    fontSize: 19,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: 63,\n    right: 30,\n    backgroundColor: \"#030096\",\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: \"#030096\",\n    borderRadius: 5,\n    padding: 5,\n    lineHeight: 15,\n    textAlign: \"center\"\n  },\n  selectDate: {\n    position: \"absolute\",\n    fontSize: 19,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: \"30%\",\n    left: 30,\n    backgroundColor: \"#030096\",\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: \"#030096\",\n    borderRadius: 5,\n    padding: 5,\n    lineHeight: 15,\n    textAlign: \"center\"\n  },\n  Measurement: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: \"#020058\"\n  },\n  HeadText: {\n    position: \"absolute\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    color: \"#020058\",\n    top: 63,\n    left: 30\n  },\n  HeadTextCap: {\n    position: \"absolute\",\n    fontSize: 12,\n    color: \"rgba(0, 20, 124, 0.86)\",\n    top: 93,\n    left: 30\n  },\n  slctCntnrTxt: {\n    position: \"absolute\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    color: \"#020058\",\n    top: \"27%\",\n    left: 80\n  },\n  slctCntnrTxtCap: {\n    position: \"absolute\",\n    fontSize: 12,\n    color: \"rgba(0, 20, 124, 0.86)\",\n    top: \"51%\",\n    left: 80\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"#EFFBFF\"\n  },\n  PhButtonContainer: {\n    postion: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TempButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TurbidityButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  CondctButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  StatusBarContainerHead: {\n    postion: \"absolute\",\n    width: deviceWidth - 40,\n    marginLeft: 20,\n    height: \"17%\",\n    bottom: 0,\n    top: \"20%\",\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: \"#37E290\",\n    marginTop: 0,\n    marginBottom: 0,\n    flexDirection: 'row',\n    borderStyle: 'solid',\n    borderWidth: 0,\n    borderTopEndRadius: 25,\n    borderTopLeftRadius: 25\n  },\n  StatusBarContainer: {\n    postion: \"absolute\",\n    width: deviceWidth - 38,\n    marginLeft: 19,\n    bottom: 0,\n    top: \"12%\",\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: \"white\",\n    marginTop: 0,\n    marginBottom: 0,\n    flexDirection: 'row',\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"black\",\n    borderTopEndRadius: 25,\n    borderTopLeftRadius: 25\n  },\n  StatusBarContainer2: {\n    postion: \"absolute\",\n    width: deviceWidth - 38,\n    marginLeft: 19,\n    bottom: 0,\n    top: \"9.5%\",\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: \"white\",\n    marginTop: 0,\n    marginBottom: 0,\n    flexDirection: 'row',\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderBottomEndRadius: 25,\n    borderBottomLeftRadius: 25\n  },\n  StatusBar: {\n    postion: 'absolute',\n    width: deviceWidth / 2 - 20,\n    fontSize: 20,\n    textAlign: \"center\",\n    padding: \"15%\",\n    paddingBottom: \"18%\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: 'transparent'\n  },\n  StatusBarLeft: {\n    postion: 'absolute',\n    width: deviceWidth / 2 - 20,\n    fontSize: 20,\n    borderRightWidth: 1,\n    textAlign: \"center\",\n    padding: \"15%\",\n    paddingBottom: \"18%\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    borderColor: 'rgba(0, 0, 0, 0.1)',\n    backgroundColor: 'transparent'\n  },\n  headContainer: {\n    flex: 1,\n    position: \"absolute\",\n    width: deviceWidth,\n    height: \"20%\"\n  },\n  previousContainer: {\n    flex: 1,\n    position: \"absolute\",\n    width: deviceWidth,\n    top: \"65%\",\n    height: \"15%\"\n  },\n  headContent: {\n    flex: 1\n  },\n  PhButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  TempButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  TurbidityButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  CondctButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  pieChart: {\n    postion: \"absolute\",\n    top: 50,\n    left: -27,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 120\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/WaterTestingScreen.js"],"names":["React","useEffect","useState","LinearGradient","Spinner","data","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","WaterTestingScreen","navigation","dataPie","labels","value_params","ph","temp","turbidity","conduct","currentDate","setCurrentDate","currentMonth","setCurrentMonth","monthNames","date","Date","getDate","month","getMonth","flex","padding","flexDirection","justifyContent","styles","headContainer","x","y","headContent","require","BackArrow","HeadText","HeadTextCap","fontSize","fontWeight","StatusBarContainerHead","StatusBarHead","StatusBarContainer","StatusBarLeft","Measurement","StatusBar","StatusBarContainer2","previousContainer","SelectArrow","slctCntnrTxt","slctCntnrTxtCap","selectDate","pieChart","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","AppButton","onPress","title","appButtonContainer","appButtonText","MyActivityIndicator","deviceWidth","StyleSheet","create","elevation","paddingVertical","paddingHorizontal","alignSelf","textTransform","height","marginLeft","marginTop","position","top","right","borderStyle","borderWidth","borderColor","lineHeight","textAlign","left","container","alignItems","PhButtonContainer","postion","bottom","TempButtonContainer","TurbidityButtonContainer","CondctButtonContainer","marginBottom","borderTopEndRadius","borderTopLeftRadius","borderBottomWidth","borderBottomColor","borderBottomEndRadius","borderBottomLeftRadius","paddingBottom","alignContent","borderRightWidth","PhButton","borderTopWidth","borderLeftWidth","TempButton","TurbidityButton","CondctButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList,Button, Text, View, StyleSheet,ActivityIndicator,Image } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\n// import TestsResults from '../assets/TestsResults.json';\r\nimport * as data from '../assets/TestsResults.json';\r\nimport {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n\r\n  import { Dimensions,TouchableHighlight  } from \"react-native\";\r\n\r\n  export default function WaterTestingScreen({navigation}) {\r\n\r\n    \r\n  // const [isLoading, setLoading] = useState(true);\r\n  // const [data, setData] = useState([]);\r\n  // console.log(data);\r\n\r\n  \r\n  // useEffect(() => {\r\n  //   fetch(TestsResults)\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setData(json))\r\n  //     .catch((error) => console.error(error))\r\n  //     .finally(() => setLoading(false));\r\n  // }, []);\r\n\r\n  const dataPie = {\r\n    labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n    data: [,(data.value_params.ph*7.14)/100, data.value_params.temp/100, (data.value_params.turbidity*2)/100, (data.value_params.conduct*2)/100]\r\n  };\r\n\r\n//   const dataPie = {\r\n//     labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n//     data: [,data.ph, data.temp, data.turbidity, data.conductivity]\r\n//   };\r\n\r\nconst [currentDate, setCurrentDate] = useState('');\r\nconst [currentMonth, setCurrentMonth] = useState('');\r\n\r\n  useEffect(() => {\r\n    var monthNames = [ 'JAN', 'FEB', 'MAR', 'APR', 'MAY','JUN',\r\n    'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\r\n    var date = new Date().getDate(); //Current Date\r\n    var month = monthNames[new Date().getMonth()]; //Current Month\r\n    // var year = new Date().getFullYear(); //Current Year\r\n    // var hours = new Date().getHours(); //Current Hours\r\n    // var min = new Date().getMinutes(); //Current Minutes\r\n    // var sec = new Date().getSeconds(); //Current Seconds\r\n    setCurrentDate(\r\n      date \r\n    );\r\n    setCurrentMonth(\r\n      month \r\n    );\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  return (\r\n\r\n    <View style={{ flex: 1, padding: 0 }}>\r\n      {/* {isLoading ? <Text>Loading...</Text> :  */}         \r\n          <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\r\n\r\n\r\n        \r\n        <View style = {styles.headContainer}>\r\n            <LinearGradient\r\n                // Button Linear Gradient\r\n                colors={['#EEF2FF', '#ffffff']}\r\n                start={{ x: 1, y: 1 }}\r\n                end={{ x: 0, y: 1 }}\r\n                style={styles.headContent}\r\n                >\r\n                <Image source={require('../assets/back-arrow-blue.png')} style = {styles.BackArrow} />\r\n\r\n                <Text style={styles.HeadText}>Quality test</Text>\r\n                <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n                <Text style={styles.Date}>{currentDate}<br/><Text style={{fontSize:11, fontWeight:500}}>{currentMonth}</Text></Text>\r\n            </LinearGradient>\r\n        </View>\r\n\r\n        <View style = {styles.StatusBarContainerHead}>\r\n          <Text style = {styles.StatusBarHead}>vrsgrsesg</Text>\r\n        </View>\r\n        <View style = {styles.StatusBarContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.StatusBarLeft}>\r\n              <Text style={styles.Measurement}>Tempurature</Text><br/> \r\n                {data.value_params.temp}°C\r\n              </Text>\r\n          </TouchableHighlight>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.StatusBar}>\r\n              <Text style={styles.Measurement}>pH</Text><br/> \r\n                {data.value_params.ph}\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n        <View style = {styles.StatusBarContainer2}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.StatusBarLeft}>\r\n              <Text style={styles.Measurement}>Conductivity</Text><br/> \r\n                {data.value_params.conduct} (S/m)\r\n              </Text>\r\n          </TouchableHighlight>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.StatusBar}>\r\n              <Text style={styles.Measurement}>Turbidity</Text><br/> \r\n                {data.value_params.turbidity} Ntu\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n\r\n        <View style = {styles.previousContainer}>\r\n        <LinearGradient\r\n                // Button Linear Gradient\r\n                colors={['#EEF2FF', '#ffffff']}\r\n                start={{ x: 1, y: 1 }}\r\n                end={{ x: 0, y: 1 }}\r\n                style={styles.headContent}\r\n                >\r\n                <Image source={require('../assets/select-arrow-blue.png')} style = {styles.SelectArrow} /> \r\n                <Text style={styles.slctCntnrTxt}>Previous results</Text>\r\n                <Text style={styles.slctCntnrTxtCap}>Water quality results</Text>\r\n                <Text style={styles.selectDate}>{currentDate}<br/><Text style={{fontSize:11, fontWeight:500}}>{currentMonth}</Text></Text>\r\n        </LinearGradient>\r\n          {/* <Text style={styles.HeadText}>Quality test</Text>\r\n          <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n          <Image source={require('../assets/select-arrow-blue.png')} style = {styles.SelectArrow} /> */}\r\n        </View>\r\n\r\n        <View style = {styles.pieChart}>\r\n                {/* <Text style = {styles.LocationText}><Text style={styles.Measurement}>Location:</Text>   {data.location}</Text> */}\r\n                <ProgressChart\r\n                data={dataPie}\r\n                width={Dimensions.get(\"window\").width}\r\n                height={220}\r\n                strokeWidth={12}\r\n                radius={27}\r\n                chartConfig={{\r\n                    backgroundColor: \"transparent\",\r\n                    backgroundGradientFrom: \"transparent\",\r\n                    backgroundGradientTo: \"transparent\",\r\n                    decimalPlaces: 2, // optional, defaults to 2dp\r\n                    color: (opacity = 1) => `rgba(3, 0, 150, ${opacity})`,\r\n                    labelColor: (opacity = 1) => `rgba(2, 0, 88, ${opacity})`,\r\n                    style: {\r\n                    borderRadius: 16,\r\n                    },\r\n                    propsForDots: {\r\n                    r: \"6\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#fff\"\r\n                    }\r\n                }}\r\n                hideLegend={false}\r\n                />\r\n\r\n                <Text> </Text>\r\n                {/* <Text style = {styles.LocationText}><Text style={styles.Measurement}>Water quality:</Text> {data.predicted_water_type}</Text> */}\r\n\r\n            </View>  \r\n        </View>\r\n      \r\n    </View>\r\n  );\r\n};\r\n\r\n  // add this to a button\r\n  const AppButton = ({ onPress, title }) => (\r\n    <TouchableOpacity onPress={onPress} style={styles.appButtonContainer}>\r\n      <Text style={styles.appButtonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const MyActivityIndicator = () => {\r\n\treturn (\r\n      \t<View style={{ flex: 1, justifyContent: \"center\"}}>\r\n      \t\t//size can be \"small\" or \"large\"\r\n\t\t\t<ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n      \t</View>\r\n    );\r\n}\r\n\r\n// export default MyActivityIndicator;\r\nlet deviceWidth = Dimensions.get('window').width\r\n\r\n  const styles = StyleSheet.create({\r\n\r\n    appButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n      },\r\n      appButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n      },\r\n\r\n      BackArrow:{\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        width:10,\r\n        height:17,\r\n        marginLeft:30,\r\n        marginTop:30,\r\n      },\r\n\r\n      SelectArrow:{\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        position:\"absolute\",\r\n        width:8,\r\n        height:15,\r\n        top:\"45%\",\r\n        right:30,\r\n        opacity:0.7,\r\n      },\r\n\r\n      Date:{\r\n        position:\"absolute\",\r\n        // fontFamily:\"ubuntu\",\r\n        fontSize:19,\r\n        fontWeight:\"bold\",\r\n        color:\"white\",\r\n        top:63,\r\n        right:30,\r\n        backgroundColor:\"#030096\",\r\n        borderStyle:'solid',\r\n        borderWidth:1,\r\n        borderColor:\"#030096\",\r\n        borderRadius:5,\r\n        padding:5,\r\n        lineHeight: 15,\r\n        textAlign: \"center\",\r\n      },\r\n      selectDate:{\r\n        position:\"absolute\",\r\n        // fontFamily:\"ubuntu\",\r\n        fontSize:19,\r\n        fontWeight:\"bold\",\r\n        color:\"white\",\r\n        top:\"30%\",\r\n        left:30,\r\n        backgroundColor:\"#030096\",\r\n        borderStyle:'solid',\r\n        borderWidth:1,\r\n        borderColor:\"#030096\",\r\n        borderRadius:5,\r\n        padding:5,\r\n        lineHeight: 15,\r\n        textAlign: \"center\",\r\n      },\r\n\r\n      Measurement: {\r\n        fontSize:18,\r\n        fontWeight:'bold',\r\n        color:\"#020058\",\r\n      },\r\n\r\n      HeadText:{\r\n        position:\"absolute\",\r\n        // fontFamily:\"ubuntu\",\r\n        fontSize:22,\r\n        fontWeight:\"bold\",\r\n        color:\"#020058\",\r\n        top:63,\r\n        left:30,\r\n      },\r\n  \r\n      HeadTextCap:{\r\n        position:\"absolute\",\r\n        fontSize:12,\r\n        // fontWeight:\"bold\",\r\n        color:\"rgba(0, 20, 124, 0.86)\",\r\n        top:93,\r\n        left:30,\r\n      },\r\n\r\n      slctCntnrTxt:{\r\n        position:\"absolute\",\r\n        // fontFamily:\"ubuntu\",\r\n        fontSize:22,\r\n        fontWeight:\"bold\",\r\n        color:\"#020058\",\r\n        top:\"27%\",\r\n        left:80,\r\n      },\r\n  \r\n      slctCntnrTxtCap:{\r\n        position:\"absolute\",\r\n        fontSize:12,\r\n        // fontWeight:\"bold\",\r\n        color:\"rgba(0, 20, 124, 0.86)\",\r\n        top:\"51%\",\r\n        left:80,\r\n      },\r\n\r\n      container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"#EFFBFF\",\r\n    },\r\n\r\n    PhButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      bottom:0,\r\n      // top:170,\r\n      // left:-80,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    TempButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      // bottom:-70,\r\n      // left:-80,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    TurbidityButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      // bottom:0,\r\n      // bottom:70,\r\n      // left:72,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    CondctButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      // bottom:0,\r\n      // bottom:70,\r\n      // left:72,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n\r\n    StatusBarContainerHead:{\r\n      postion:\"absolute\",\r\n      width:deviceWidth-40,\r\n      marginLeft:20,\r\n      height:\"17%\",\r\n      bottom:0,\r\n      top:\"20%\",\r\n      alignItems: \"center\",\r\n      justifyContent: 'center',\r\n      backgroundColor: \"#37E290\",\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n      flexDirection: 'row',\r\n      borderStyle:'solid',\r\n      borderWidth:0,\r\n      borderTopEndRadius:25,\r\n      borderTopLeftRadius:25,\r\n      \r\n    },\r\n\r\n    StatusBarContainer:{\r\n      postion:\"absolute\",\r\n      width:deviceWidth-38,\r\n      marginLeft:19,\r\n      bottom:0,\r\n      top:\"12%\",\r\n      alignItems: \"center\",\r\n      justifyContent: 'center',\r\n      backgroundColor: \"white\",\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n      flexDirection: 'row',\r\n      borderStyle:'solid',\r\n      borderWidth:1,\r\n      borderColor:\"white\",\r\n      borderBottomWidth: 1,\r\n      borderBottomColor:\"black\",\r\n      borderTopEndRadius:25,\r\n      borderTopLeftRadius:25,\r\n    },\r\n\r\n    StatusBarContainer2:{\r\n      postion:\"absolute\",\r\n      width:deviceWidth-38,\r\n      marginLeft:19,\r\n      bottom:0,\r\n      top:\"9.5%\",\r\n      alignItems: \"center\",\r\n      justifyContent: 'center',\r\n      backgroundColor: \"white\",\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n      flexDirection: 'row',\r\n      borderStyle:'solid',\r\n      borderWidth:1,\r\n      borderColor:\"white\",\r\n      borderBottomEndRadius:25,\r\n      borderBottomLeftRadius:25,\r\n    },\r\n\r\n    StatusBar:{\r\n      postion:'absolute',\r\n      width:deviceWidth/2-20,\r\n      fontSize:20,\r\n      // height:\"40%\",\r\n      // borderWidth: 1,\r\n      textAlign:\"center\",\r\n      padding: \"15%\",\r\n      paddingBottom:\"18%\",\r\n      alignContent:\"center\",\r\n      justifyContent:\"center\",\r\n      // borderRadius:25,\r\n      // borderTopWidth:0,\r\n      // borderLeftWidth:0,\r\n      // borderColor: 'rgba(0, 0, 0, 0.1)',\r\n      backgroundColor: 'transparent'\r\n    },\r\n    StatusBarLeft:{\r\n      postion:'absolute',\r\n      width:deviceWidth/2-20,\r\n      fontSize:20,\r\n      // height:\"40%\",\r\n      borderRightWidth: 1,\r\n      \r\n      textAlign:\"center\",\r\n      padding: \"15%\",\r\n      paddingBottom:\"18%\",\r\n      alignContent:\"center\",\r\n      justifyContent:\"center\",\r\n      // borderRadius:25,\r\n      // borderTopWidth:0,\r\n      // borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.1)',\r\n      backgroundColor: 'transparent'\r\n    },\r\n\r\n    headContainer: {\r\n        flex: 1,\r\n        position:\"absolute\",\r\n        width:deviceWidth,\r\n        height:\"20%\",\r\n    },\r\n    previousContainer: {\r\n        flex: 1,\r\n        position:\"absolute\",\r\n        width:deviceWidth,\r\n        top:\"65%\",\r\n        height:\"15%\",\r\n    },\r\n    headContent: {\r\n        flex: 1,\r\n        // width:Dimensions.get(\"window\").width,\r\n        // height: \"10%\",\r\n    },\r\n\r\n    PhButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderTopWidth:0,\r\n      borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    TempButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderBottomWidth:0,\r\n      borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    TurbidityButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderTopWidth:0,\r\n      borderRightWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    CondctButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderBottomWidth:0,\r\n      borderRightWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n\r\n    pieChart:{\r\n        // flex: 1,\r\n        postion:\"absolute\",\r\n        top:50,\r\n        left:-27,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"transparent\",\r\n        marginTop: 120,\r\n        // paddingTop: 200,\r\n      },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}