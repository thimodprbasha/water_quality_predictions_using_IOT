{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\Example.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport testlists from \"../assets/TestLists.json\";\nexport default function Example(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch(\"https://reactnative.dev/movies.json\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.movies);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref2, index) {\n      var id = _ref2.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, item.title, \", \", item.releaseYear);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n}\nvar dataPieChart = {\n  labels: [\"pH\", \"Temp\", \"Turbidity\"],\n  data: [0.4, 0.7, 0.8]\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#EFFBFF\"\n  },\n  headContainer: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  },\n  headContent: {\n    flex: 1,\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  LogoText: {\n    postion: \"absolute\",\n    fontSize: 23,\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    top: 590,\n    color: \"rgba(255, 255, 255, 0.9)\"\n  },\n  LogoCapText: {\n    postion: \"absolute\",\n    fontSize: 14,\n    alignItems: \"center\",\n    top: 670,\n    color: \"rgba(255, 255, 255, 0.7)\"\n  },\n  StartLogo: {\n    postion: \"absolute\",\n    top: 200,\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/Example.js"],"names":["StatusBar","React","useEffect","useState","LinearGradient","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","testlists","Example","navigation","isLoading","setLoading","data","setData","fetch","then","response","json","movies","catch","error","console","finally","flex","padding","index","id","item","title","releaseYear","dataPieChart","labels","styles","StyleSheet","create","container","alignItems","justifyContent","backgroundColor","headContainer","width","Dimensions","get","height","headContent","LogoText","postion","fontSize","fontWeight","top","color","LogoCapText","StartLogo"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import CircleChart from \"react-native-circle-chart\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n  FlatList,\r\n} from \"react-native\";\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\n\r\nimport { Dimensions } from \"react-native\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n// import * as data from '../assets/TestsResults.json';\r\nimport testlists from \"../assets/TestLists.json\";\r\n\r\nexport default function Example({ navigation }) {\r\n  //   // const [isLoading, setLoading] = useState(true);\r\n  // const [isLoading, setLoading] = useState(true);\r\n  // const [data, setData] = useState([]);\r\n  // console.log(data);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(testlists)\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setData(json))\r\n  //     .catch((error) => console.error(error))\r\n  //     .finally(() => setLoading(false));\r\n  // }, []);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://reactnative.dev/movies.json\")\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json.movies))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 24 }}>\r\n      {isLoading ? (\r\n        <ActivityIndicator />\r\n      ) : (\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={({ id }, index) => id}\r\n          renderItem={({ item }) => (\r\n            <Text>\r\n              {item.title}, {item.releaseYear}\r\n            </Text>\r\n          )}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst dataPieChart = {\r\n  labels: [\"pH\", \"Temp\", \"Turbidity\"], // optional\r\n  data: [0.4, 0.7, 0.8],\r\n};\r\n\r\n// const result = await CircleChart.multiply(3, 7);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    backgroundColor: \"#EFFBFF\",\r\n  },\r\n  headContainer: {\r\n    flex: 1,\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n  },\r\n  headContent: {\r\n    flex: 1,\r\n    // width:Dimensions.get(\"window\").width,\r\n    height: \"100%\",\r\n    // justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    // flexDirection: 'row',\r\n    // alignItems: 'center',\r\n  },\r\n\r\n  LogoText: {\r\n    postion: \"absolute\",\r\n    fontSize: 23,\r\n    fontWeight: \"bold\",\r\n    alignItems: \"center\",\r\n    top: 590,\r\n    color: \"rgba(255, 255, 255, 0.9)\",\r\n  },\r\n  LogoCapText: {\r\n    postion: \"absolute\",\r\n    fontSize: 14,\r\n    alignItems: \"center\",\r\n    // fontWeight:\"bold\",\r\n    top: 670,\r\n    color: \"rgba(255, 255, 255, 0.7)\",\r\n  },\r\n\r\n  StartLogo: {\r\n    postion: \"absolute\",\r\n    top: 200,\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}