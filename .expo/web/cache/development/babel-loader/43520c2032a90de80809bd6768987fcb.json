{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\StartPage.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nexport default function App() {\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#001A4B', '#002B7B'],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.LogoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.LogoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"JalaRead\"), React.createElement(Text, {\n    style: styles.LogoCapText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Water Quality Tester\")), React.createElement(Image, {\n    source: require(\"../assets/jala-read-logo.png\"),\n    style: styles.StartLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })))));\n}\nvar dataPieChart = {\n  labels: [\"pH\", \"Temp\", \"Turbidity\"],\n  data: [0.4, 0.7, 0.8]\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"#EFFBFF\"\n  },\n  headContainer: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  },\n  headContent: {\n    flex: 1,\n    height: \"100%\",\n    alignItems: 'center'\n  },\n  LogoText: {\n    postion: \"absolute\",\n    fontSize: 23,\n    fontWeight: \"bold\",\n    alignItems: 'center',\n    top: 650,\n    color: 'rgba(255, 255, 255, 0.8)'\n  },\n  LogoCapText: {\n    postion: \"absolute\",\n    fontSize: 14,\n    alignItems: 'center',\n    top: 650,\n    color: 'rgba(255, 255, 255, 0.7)'\n  },\n  StartLogo: {\n    postion: \"absolute\",\n    top: 200,\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/StartPage.js"],"names":["StatusBar","React","useEffect","useState","LinearGradient","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","styles","container","headContainer","x","y","headContent","LogoText","LogoCapText","require","StartLogo","dataPieChart","labels","data","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","Dimensions","get","height","postion","fontSize","fontWeight","top","color"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import CircleChart from \"react-native-circle-chart\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n  FlatList,\r\n} from \"react-native\";\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart\r\n} from \"react-native-chart-kit\";\r\n\r\nimport { Dimensions  } from \"react-native\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nexport default function App() {\r\n\r\n    // const [isLoading, setLoading] = useState(true);\r\n\r\n  return (\r\n    \r\n    <View>\r\n       {/* {isLoading ? <Text>Loading...</Text> :  */}\r\n      {/* (  */}\r\n        <View  style = {styles.container}>\r\n            <View style = {styles.headContainer}>\r\n                \r\n                <LinearGradient\r\n                    // Button Linear Gradient\r\n                    colors={['#001A4B', '#002B7B']}\r\n                    start={{ x: 1, y: 1 }}\r\n                    end={{ x: 0, y: 1 }}\r\n                    style={styles.headContent}\r\n                    >\r\n                    <View style={styles.LogoText} >\r\n                        <Text style = {styles.LogoText}>JalaRead</Text>\r\n                        <Text style = {styles.LogoCapText}>Water Quality Tester</Text>\r\n                    </View>\r\n                    <Image source={require('../assets/jala-read-logo.png')} style = {styles.StartLogo} />\r\n                    \r\n                </LinearGradient>\r\n            </View>\r\n        </View>\r\n      {/* )} */}\r\n    </View>\r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst dataPieChart = {\r\n  \r\n  labels: [\"pH\", \"Temp\", \"Turbidity\"], // optional\r\n  data: [0.4, 0.7, 0.8]\r\n};\r\n\r\n// const result = await CircleChart.multiply(3, 7);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"#EFFBFF\",\r\n    },\r\n    headContainer: {\r\n        flex: 1,\r\n        width:Dimensions.get(\"window\").width,\r\n        height:Dimensions.get(\"window\").height,\r\n    },\r\n    headContent: {\r\n        flex: 1,\r\n        // width:Dimensions.get(\"window\").width,\r\n        height:\"100%\",\r\n        // justifyContent: 'center',\r\n        alignItems: 'center',\r\n        // flexDirection: 'row',\r\n        // alignItems: 'center',\r\n    },\r\n\r\n    LogoText:{\r\n        postion:\"absolute\",\r\n        fontSize:23,\r\n        fontWeight:\"bold\",\r\n        alignItems: 'center',\r\n        top:650,\r\n        color:'rgba(255, 255, 255, 0.8)',\r\n    },\r\n    LogoCapText:{\r\n        postion:\"absolute\",\r\n        fontSize:14,\r\n        alignItems: 'center',\r\n        // fontWeight:\"bold\",\r\n        top:650,\r\n        color:'rgba(255, 255, 255, 0.7)',\r\n    },\r\n\r\n    StartLogo:{\r\n        postion:\"absolute\",\r\n        top:200,\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        width:100,\r\n        height:100,\r\n    },\r\n\r\n}); "]},"metadata":{},"sourceType":"module"}