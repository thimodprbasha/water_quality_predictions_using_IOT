{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nvar INITIAL_STATE = {\n  user: null\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_USER\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.user\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  store: reducer\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/Reducer.js"],"names":["combineReducers","INITIAL_STATE","user","reducer","state","action","type","store"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAAtB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACI,6CACOF,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAFjB;;AAIJ;AACE,aAAOE,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeJ,eAAe,CAAC;AAC7BO,EAAAA,KAAK,EAAEJ;AADsB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n  user: null,\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\": \r\n        return {\r\n            ...state,\r\n            user: action.user,\r\n        }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  store: reducer\r\n});"]},"metadata":{},"sourceType":"module"}