{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\MonthlyResults.js\",\n    _this2 = this;\n\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport TestsResults from \"../assets/use_results.json\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useSelector } from \"react-redux\";\nexport default function MonthlyResults(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var userName = useSelector(function (state) {\n    return state.initialReducer.user;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentDate = _useState2[0],\n      setCurrentDate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentMonth = _useState4[0],\n      setCurrentMonth = _useState4[1];\n\n  useEffect(function () {\n    var monthNames = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n    var date = new Date().getDate();\n    var month = monthNames[new Date().getMonth()];\n    setCurrentDate(date);\n    setCurrentMonth(month);\n  }, []);\n\n  var getWaterType = function getWaterType(waterType) {\n    if (waterType == \"Excellent\") {\n      return 1;\n    }\n\n    if (waterType == \"Normal\") {\n      return 2;\n    }\n\n    if (waterType == \"Bad\") {\n      return 3;\n    }\n  };\n\n  var handleItemClick = function handleItemClick(event) {\n    navigation.navigate(\"WaterTestingScreen\", {\n      data: event\n    });\n  };\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setLoding = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      setTitle = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      description = _useState14[0],\n      setDescription = _useState14[1];\n\n  console.log(data);\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      currentUserName = _useState16[0],\n      setUserName = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      currentPrevDay = _useState18[0],\n      setPrevDay = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      currentPrevMonth = _useState20[0],\n      setPrevmonth = _useState20[1];\n\n  useEffect(function () {\n    getUserDetails();\n  }, [userName]);\n\n  var getUserDetails = function getUserDetails() {\n    fetch(\"http://127.0.0.1:5000/get_report\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_name: \"Mahen66\"\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return setData(json);\n    });\n    var monthNames = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [\"#EEF2FF\", \"#ffffff\"],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Dashboard\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back-arrow-blue.png\"),\n    style: styles.BackArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  })), React.createElement(Text, {\n    style: styles.HeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, userName), React.createElement(Text, {\n    style: styles.HeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Water quality results\"), React.createElement(Image, {\n    source: require(\"../assets/calendar-blue.png\"),\n    style: styles.CalendarImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.StatusContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [\"#EEF2FF\", \"#ffffff\"],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: data.results,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.resultsContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.previousContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/select-arrow-blue.png\"),\n        style: styles.SelectArrow,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.slctCntnrTxt,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, \"Previous results\"), React.createElement(Text, {\n        style: styles.slctCntnrTxtCap,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }, \"Water quality results\"), React.createElement(Text, {\n        style: [getWaterType(data.predicted_water_type) == 1 ? styles.excellentQlt : styles.selectDate, getWaterType(data.predicted_water_type) == 2 ? styles.normalQlt : styles.selectDate, getWaterType(data.predicted_water_type) == 3 ? styles.badQlt : styles.selectDate, styles.selectDate],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, currentDate, React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 11,\n          fontWeight: 500\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, currentMonth))));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  })))));\n}\n\nvar AppButton = function AppButton(_ref3) {\n  var onPress = _ref3.onPress,\n      title = _ref3.title;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.appButtonContainer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }, title));\n};\n\nvar MyActivityIndicator = function MyActivityIndicator() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 5\n    }\n  }, \"//size can be \\\"small\\\" or \\\"large\\\"\", React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar deviceWidth = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  BackArrow: {\n    width: 10,\n    height: 17,\n    marginLeft: 30,\n    marginTop: 30\n  },\n  CalendarImg: {\n    position: \"absolute\",\n    top: \"46%\",\n    right: \"6%\",\n    width: 38,\n    height: 41\n  },\n  SelectArrow: {\n    position: \"absolute\",\n    width: 8,\n    height: 15,\n    top: \"45%\",\n    right: 30,\n    opacity: 0.7,\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    argi: argi\n  },\n  excellentQlt: {\n    backgroundColor: \"#37E290\",\n    borderColor: \"#37E290\"\n  },\n  normalQlt: {\n    backgroundColor: \"#0099C9\",\n    borderColor: \"#0099C9\"\n  },\n  badQlt: {\n    backgroundColor: \"#FF7B8A\",\n    borderColor: \"#FF7B8A\"\n  },\n  selectDate: {\n    position: \"absolute\",\n    fontSize: 19,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: \"30%\",\n    left: 30,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 5,\n    paddingBottom: 10,\n    paddingTop: 10,\n    lineHeight: 15,\n    textAlign: \"center\",\n    fontFamily: \"SF Pro Rounded\"\n  },\n  Measurement: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#020058\"\n  },\n  HeadText: {\n    position: \"absolute\",\n    fontSize: 23,\n    fontWeight: \"bold\",\n    color: \"#00397C\",\n    top: 63,\n    left: 30,\n    fontFamily: \"SF Pro Rounded\"\n  },\n  HeadTextCap: {\n    position: \"absolute\",\n    fontSize: 14,\n    fontWeight: 600,\n    color: \"rgba(0, 20, 124, 0.86)\",\n    top: 93,\n    left: 30,\n    fontFamily: \"SF Pro Rounded\"\n  },\n  slctCntnrTxt: {\n    position: \"absolute\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    color: \"#00397C\",\n    top: \"27%\",\n    left: 80,\n    fontFamily: \"SF Pro Rounded\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  slctCntnrTxtCap: {\n    position: \"absolute\",\n    fontSize: 14,\n    fontWeight: 600,\n    color: \"#626263\",\n    top: \"51%\",\n    left: 80,\n    paddingTop: 3,\n    fontFamily: \"SF Pro Rounded\",\n    marginTop: 20\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#EFFBFF\"\n  },\n  PhButtonContainer: {\n    postion: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TempButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TurbidityButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  CondctButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  StatusContainer: {\n    postion: \"absolute\",\n    width: deviceWidth,\n    top: \"20%\",\n    height: \"100%\"\n  },\n  StatusBarContainerHead: {\n    postion: \"absolute\",\n    width: deviceWidth,\n    height: \"65%\",\n    bottom: 0,\n    top: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    marginTop: 0,\n    marginBottom: 0,\n    borderStyle: \"solid\",\n    borderWidth: 0,\n    borderRadius: 25,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n    elevation: 12\n  },\n  StatusBarHead: {\n    fontSize: 20,\n    fontWeight: 600,\n    color: \"black\"\n  },\n  StatusBarContainer: {\n    postion: \"absolute\",\n    width: deviceWidth - 38,\n    bottom: 0,\n    top: \"7.5%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    marginTop: 0,\n    marginBottom: 0,\n    flexDirection: \"row\",\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#808080\",\n    borderTopEndRadius: 25,\n    borderTopLeftRadius: 25\n  },\n  StatusBarContainer2: {\n    postion: \"absolute\",\n    width: deviceWidth - 38,\n    bottom: 0,\n    top: \"7.3%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    marginTop: 0,\n    marginBottom: 0,\n    flexDirection: \"row\",\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderBottomEndRadius: 25,\n    borderBottomLeftRadius: 25\n  },\n  StatusBar: {\n    postion: \"absolute\",\n    width: deviceWidth / 2 - 20,\n    fontSize: 20,\n    textAlign: \"center\",\n    padding: \"15%\",\n    paddingBottom: \"18%\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\"\n  },\n  StatusBarLeft: {\n    postion: \"absolute\",\n    width: deviceWidth / 2 - 20,\n    fontSize: 20,\n    borderRightWidth: 1,\n    textAlign: \"center\",\n    padding: \"15%\",\n    paddingBottom: \"18%\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    borderColor: \"rgba(0, 0, 0, 0.1)\",\n    backgroundColor: \"transparent\"\n  },\n  headContainer: {\n    flex: 1,\n    position: \"absolute\",\n    width: deviceWidth,\n    height: \"20%\"\n  },\n  previousContainer: {\n    width: deviceWidth,\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    top: \"5%\",\n    height: \"13%\",\n    backgroundColor: \"white\",\n    borderStyle: \"solid\",\n    borderBottomWidth: 1,\n    borderColor: \"#D3D3D3\"\n  },\n  resultsContainer: {\n    flex: 1,\n    position: \"relative\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: deviceWidth,\n    height: \"100%\",\n    backgroundColor: \"white\",\n    borderStyle: \"solid\",\n    borderWidth: 0,\n    borderColor: \"#D3D3D3\",\n    borderTopEndRadius: 25,\n    borderTopLeftRadius: 25,\n    shadowOffset: {\n      width: 0,\n      height: -2\n    },\n    shadowOpacity: 0.15,\n    shadowRadius: 10,\n    elevation: 12,\n    marginTop: 90\n  },\n  headContent: {\n    flex: 1\n  },\n  PhButton: {\n    postion: \"absolute\",\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\n    backgroundColor: \"white\"\n  },\n  TempButton: {\n    postion: \"absolute\",\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\n    backgroundColor: \"white\"\n  },\n  TurbidityButton: {\n    postion: \"absolute\",\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\n    backgroundColor: \"white\"\n  },\n  CondctButton: {\n    postion: \"absolute\",\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderRightWidth: 0,\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\n    backgroundColor: \"white\"\n  },\n  pieChart: {\n    postion: \"absolute\",\n    top: 50,\n    left: -50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 120\n  },\n  pieChartContainer: {\n    postion: \"absolute\",\n    top: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 120\n  },\n  PieHead: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    color: \"#020058\"\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/MonthlyResults.js"],"names":["React","useEffect","useState","LinearGradient","Spinner","TestsResults","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","useSelector","MonthlyResults","navigation","userName","state","initialReducer","user","currentDate","setCurrentDate","currentMonth","setCurrentMonth","monthNames","date","Date","getDate","month","getMonth","getWaterType","waterType","handleItemClick","event","navigate","data","isLoading","setLoding","setData","title","setTitle","loading","setLoading","description","setDescription","console","log","currentUserName","setUserName","currentPrevDay","setPrevDay","currentPrevMonth","setPrevmonth","getUserDetails","fetch","method","headers","body","JSON","stringify","user_name","then","res","json","flex","padding","backgroundColor","flexDirection","justifyContent","styles","headContainer","x","y","headContent","require","BackArrow","HeadText","HeadTextCap","CalendarImg","StatusContainer","results","item","resultsContainer","previousContainer","SelectArrow","slctCntnrTxt","slctCntnrTxtCap","predicted_water_type","excellentQlt","selectDate","normalQlt","badQlt","fontSize","fontWeight","index","toString","AppButton","onPress","appButtonContainer","appButtonText","MyActivityIndicator","deviceWidth","Dimensions","get","width","StyleSheet","create","elevation","borderRadius","paddingVertical","paddingHorizontal","color","alignSelf","textTransform","height","marginLeft","marginTop","position","top","right","opacity","alignContent","alignItems","argi","borderColor","left","borderStyle","borderWidth","paddingBottom","paddingTop","lineHeight","textAlign","fontFamily","Measurement","container","PhButtonContainer","postion","bottom","TempButtonContainer","TurbidityButtonContainer","CondctButtonContainer","StatusBarContainerHead","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","StatusBarHead","StatusBarContainer","borderBottomWidth","borderBottomColor","borderTopEndRadius","borderTopLeftRadius","StatusBarContainer2","borderBottomEndRadius","borderBottomLeftRadius","StatusBar","StatusBarLeft","borderRightWidth","PhButton","borderTopWidth","borderLeftWidth","TempButton","TurbidityButton","CondctButton","pieChart","pieChartContainer","PieHead"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  Button,\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport Spinner from \"react-native-loading-spinner-overlay\";\r\nimport TestsResults from \"../assets/use_results.json\";\r\n// import * as data from '../assets/TestsResults.json';\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\n\r\nimport { Dimensions, TouchableHighlight } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function MonthlyResults({ navigation }) {\r\n  const userName = useSelector((state) => state.initialReducer.user);\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    var monthNames = [\r\n      \"JAN\",\r\n      \"FEB\",\r\n      \"MAR\",\r\n      \"APR\",\r\n      \"MAY\",\r\n      \"JUN\",\r\n      \"JUL\",\r\n      \"AUG\",\r\n      \"SEP\",\r\n      \"OCT\",\r\n      \"NOV\",\r\n      \"DEC\",\r\n    ];\r\n    var date = new Date().getDate(); //Current Date\r\n    var month = monthNames[new Date().getMonth()]; //Current Month\r\n    // var year = new Date().getFullYear(); //Current Year\r\n    // var hours = new Date().getHours(); //Current Hours\r\n    // var min = new Date().getMinutes(); //Current Minutes\r\n    // var sec = new Date().getSeconds(); //Current Seconds\r\n    setCurrentDate(date);\r\n    setCurrentMonth(month);\r\n  }, []);\r\n\r\n  const getWaterType = (waterType) => {\r\n    if (waterType == \"Excellent\") {\r\n      return 1;\r\n    }\r\n    if (waterType == \"Normal\") {\r\n      return 2;\r\n    }\r\n    if (waterType == \"Bad\") {\r\n      return 3;\r\n    }\r\n  };\r\n\r\n  const handleItemClick = (event) => {\r\n    navigation.navigate(\"WaterTestingScreen\", { data: event });\r\n  };\r\n\r\n  // const [isLoading, setLoding] = useState(true);\r\n  // const [data,setData] = useState([]);\r\n  // const [title,setTitle] = useState([]);\r\n  // const [loading,setLoading] = useState(false);\r\n  // const [description,setDescription] = useState([]);\r\n  // console.log(data)\r\n\r\n  // useEffect(() => {\r\n  //   fetch(TestsResults)\r\n  //   .then((response) => response.json())\r\n  //   .then((json) => setData(json))\r\n  //   .catch((error) => alert(error))\r\n  //   .finally(() => setLoding(false));\r\n  // }, []);\r\n\r\n  const [isLoading, setLoding] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [title, setTitle] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState([]);\r\n  console.log(data);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\r\n  //     \"http://127.0.0.1:5000/get_report\"\r\n  //   )\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setData(json))\r\n  //     .catch((error) => alert(error))\r\n  //     .finally(() => setLoding(false));\r\n  // }, []);\r\n\r\n  const [currentUserName, setUserName] = useState(\"\");\r\n  const [currentPrevDay, setPrevDay] = useState(\"\");\r\n  const [currentPrevMonth, setPrevmonth] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getUserDetails();\r\n  }, [userName]);\r\n\r\n  const getUserDetails = () => {\r\n    fetch(\"http://127.0.0.1:5000/get_report\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        // user_name: userName || \"Mahen66\",\r\n        user_name: \"Mahen66\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => setData(json));\r\n    // .then((data) => {\r\n    //    const usr = `${(data.user || {}).userFName} ${\r\n    //     (data.user || {}).userLName\r\n    //   }`;\r\n    //   console.log(usr)\r\n    //   setUserName(usr)\r\n\r\n    // const prevDate = `${(data.results || {}).date} ${\r\n    //   (data.results || {}).month\r\n    // }`;\r\n    // const prevDay = (data.results || {}).date\r\n    // setPrevDay(prevDay)\r\n    var monthNames = [\r\n      \"JAN\",\r\n      \"FEB\",\r\n      \"MAR\",\r\n      \"APR\",\r\n      \"MAY\",\r\n      \"JUN\",\r\n      \"JUL\",\r\n      \"AUG\",\r\n      \"SEP\",\r\n      \"OCT\",\r\n      \"NOV\",\r\n      \"DEC\",\r\n    ];\r\n    // console.disableYellowBox = true;\r\n    // const prevDay = data.results[0].date\r\n    // const prevMonth = data.results[0].month\r\n    // const value = responseJson.filter(obj => obj.email === 'abc@gmail.com')[0].id\r\n    // var prevmonth = monthNames[prevMonth];\r\n    // setPrevmonth(prevmonth)\r\n    // console.log(prevmonth)\r\n    // setPrevDay(prevDay)\r\n    // console.log(prevDay)\r\n    // userD(userFullName);\r\n\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 0, backgroundColor: \"white\" }}>\r\n      {/* {isLoading ? <Text>Loading...</Text> :           */}\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <View style={styles.headContainer}>\r\n          <LinearGradient\r\n            // Button Linear Gradient\r\n            colors={[\"#EEF2FF\", \"#ffffff\"]}\r\n            start={{ x: 1, y: 1 }}\r\n            end={{ x: 0, y: 1 }}\r\n            style={styles.headContent}\r\n          >\r\n            <TouchableOpacity onPress={() => navigation.navigate(\"Dashboard\")}>\r\n              <Image\r\n                source={require(\"../assets/back-arrow-blue.png\")}\r\n                style={styles.BackArrow}\r\n              />\r\n            </TouchableOpacity>\r\n            <Text style={styles.HeadText}>{userName}</Text>\r\n            <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n\r\n            <Image\r\n              source={require(\"../assets/calendar-blue.png\")}\r\n              style={styles.CalendarImg}\r\n            />\r\n            {/* <FlatList\r\n                      data={data.results}\r\n                      keyExtractor={({ id } , index)=> id}\r\n                      renderItem={({ item }) =>(\r\n                        <View> \r\n                          <Text>\r\n                        {item.title},\r\n                        {item.releaseYear}\r\n                      </Text>\r\n                      </View>\r\n\r\n                      ) }\r\n                    /> */}\r\n            \r\n          </LinearGradient>\r\n        </View>\r\n\r\n        <View style={styles.StatusContainer}>\r\n          <LinearGradient\r\n            // Button Linear Gradient\r\n            colors={[\"#EEF2FF\", \"#ffffff\"]}\r\n            start={{ x: 1, y: 1 }}\r\n            end={{ x: 0, y: 1 }}\r\n            style={styles.headContent}\r\n          >\r\n            <FlatList\r\n              data={data.results}\r\n              // renderItem={({ item }) => <Text>{item.title}esfeefe</Text>}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.resultsContainer}>\r\n                  <View style={styles.previousContainer}>\r\n                    <Image\r\n                      source={require(\"../assets/select-arrow-blue.png\")}\r\n                      style={styles.SelectArrow}\r\n                    />\r\n                    <Text style={styles.slctCntnrTxt}>Previous results</Text>\r\n                    <Text style={styles.slctCntnrTxtCap}>\r\n                      Water quality results\r\n                    </Text>\r\n                    <Text\r\n                      style={[\r\n                        getWaterType(data.predicted_water_type) == 1\r\n                          ? styles.excellentQlt\r\n                          : styles.selectDate,\r\n                        getWaterType(data.predicted_water_type) == 2\r\n                          ? styles.normalQlt\r\n                          : styles.selectDate,\r\n                        getWaterType(data.predicted_water_type) == 3\r\n                          ? styles.badQlt\r\n                          : styles.selectDate,\r\n\r\n                        styles.selectDate,\r\n                      ]}\r\n                    >\r\n                      {currentDate}\r\n                      <br />\r\n                      <Text style={{ fontSize: 11, fontWeight: 500 }}>\r\n                        {currentMonth}\r\n                      </Text>\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              )}\r\n              keyExtractor={(item, index) => index.toString()}\r\n            />\r\n            {/* <View style={styles.resultsContainer}>\r\n              <View style={styles.previousContainer}>\r\n                <Image\r\n                  source={require(\"../assets/select-arrow-blue.png\")}\r\n                  style={styles.SelectArrow}\r\n                />\r\n                <Text style={styles.slctCntnrTxt}>Previous results</Text>\r\n                <Text style={styles.slctCntnrTxtCap}>\r\n                  Water quality results\r\n                </Text>\r\n                <Text\r\n                  style={[\r\n                    getWaterType(data.predicted_water_type) == 1\r\n                      ? styles.excellentQlt\r\n                      : styles.selectDate,\r\n                    getWaterType(data.predicted_water_type) == 2\r\n                      ? styles.normalQlt\r\n                      : styles.selectDate,\r\n                    getWaterType(data.predicted_water_type) == 3\r\n                      ? styles.badQlt\r\n                      : styles.selectDate,\r\n\r\n                    styles.selectDate,\r\n                  ]}\r\n                >\r\n                  {currentDate}\r\n                  <br />\r\n                  <Text style={{ fontSize: 11, fontWeight: 500 }}>\r\n                    {currentMonth}\r\n                  </Text>\r\n                </Text>\r\n              </View>\r\n            </View> */}\r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n      {/* } */}\r\n    </View>\r\n  );\r\n}\r\n\r\n// add this to a button\r\nconst AppButton = ({ onPress, title }) => (\r\n  <TouchableOpacity onPress={onPress} style={styles.appButtonContainer}>\r\n    <Text style={styles.appButtonText}>{title}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst MyActivityIndicator = () => {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n      //size can be \"small\" or \"large\"\r\n      <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n    </View>\r\n  );\r\n};\r\n\r\n// export default MyActivityIndicator;\r\nlet deviceWidth = Dimensions.get(\"window\").width;\r\n\r\nconst styles = StyleSheet.create({\r\n  appButtonContainer: {\r\n    elevation: 8,\r\n    backgroundColor: \"#009688\",\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 12,\r\n  },\r\n  appButtonText: {\r\n    fontSize: 18,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n\r\n  BackArrow: {\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    width: 10,\r\n    height: 17,\r\n    marginLeft: 30,\r\n    marginTop: 30,\r\n  },\r\n\r\n  CalendarImg: {\r\n    position: \"absolute\",\r\n    top: \"46%\",\r\n    right: \"6%\",\r\n    width: 38,\r\n    height: 41,\r\n  },\r\n\r\n  SelectArrow: {\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    position: \"absolute\",\r\n    width: 8,\r\n    height: 15,\r\n    top: \"45%\",\r\n    right: 30,\r\n    opacity: 0.7,\r\n    alignContent:\"center\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    argi\r\n  },\r\n\r\n  //   Date:{\r\n  //     position:\"absolute\",\r\n  //     // fontFamily:\"ubuntu\",\r\n  //     // fontSize:19,\r\n  //     // fontWeight:\"bold\",\r\n  //     // color:\"white\",\r\n  //     top:63,\r\n  //     right:30,\r\n  //     // backgroundColor:\"#030096\",\r\n  //     // borderStyle:'solid',\r\n  //     // borderWidth:1,\r\n  //     // borderColor:\"#030096\",\r\n  //     // borderRadius:5,\r\n  //     // padding:5,\r\n  //     lineHeight: 15,\r\n  //     textAlign: \"center\",\r\n  //   },\r\n\r\n  excellentQlt: {\r\n    backgroundColor: \"#37E290\",\r\n    borderColor: \"#37E290\",\r\n  },\r\n  normalQlt: {\r\n    backgroundColor: \"#0099C9\",\r\n    borderColor: \"#0099C9\",\r\n  },\r\n  badQlt: {\r\n    backgroundColor: \"#FF7B8A\",\r\n    borderColor: \"#FF7B8A\",\r\n  },\r\n\r\n  selectDate: {\r\n    position: \"absolute\",\r\n    // fontFamily:\"ubuntu\",\r\n    fontSize: 19,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    top: \"30%\",\r\n    left: 30,\r\n    // backgroundColor:\"#030096\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    // borderColor:\"#030096\",\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n    lineHeight: 15,\r\n    textAlign: \"center\",\r\n    fontFamily: \"SF Pro Rounded\",\r\n  },\r\n\r\n  Measurement: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"#020058\",\r\n  },\r\n\r\n  HeadText: {\r\n    position: \"absolute\",\r\n    // fontFamily:\"ubuntu\",\r\n    fontSize: 23,\r\n    fontWeight: \"bold\",\r\n    color: \"#00397C\",\r\n    top: 63,\r\n    left: 30,\r\n    fontFamily: \"SF Pro Rounded\",\r\n  },\r\n\r\n  HeadTextCap: {\r\n    position: \"absolute\",\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n    color: \"rgba(0, 20, 124, 0.86)\",\r\n    top: 93,\r\n    left: 30,\r\n    fontFamily: \"SF Pro Rounded\",\r\n  },\r\n\r\n  slctCntnrTxt: {\r\n    position: \"absolute\",\r\n    // fontFamily:\"ubuntu\",\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    color: \"#00397C\",\r\n    top: \"27%\",\r\n    left: 80,\r\n    fontFamily: \"SF Pro Rounded\",\r\n    alignContent:\"center\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n  },\r\n\r\n  slctCntnrTxtCap: {\r\n    position: \"absolute\",\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n    color: \"#626263\",\r\n    top: \"51%\",\r\n    left: 80,\r\n    paddingTop: 3,\r\n    fontFamily: \"SF Pro Rounded\",\r\n    marginTop:20\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    backgroundColor: \"#EFFBFF\",\r\n  },\r\n\r\n  PhButtonContainer: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    bottom: 0,\r\n    // top:170,\r\n    // left:-80,\r\n    alignItems: \"center\",\r\n    // justifyContent: 'flex-end',\r\n    backgroundColor: \"transparent\",\r\n    marginTop: 0,\r\n    // paddingTop: 200,\r\n  },\r\n  TempButtonContainer: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    // bottom:-70,\r\n    // left:-80,\r\n    alignItems: \"center\",\r\n    // justifyContent: 'flex-end',\r\n    backgroundColor: \"transparent\",\r\n    marginTop: 0,\r\n    // paddingTop: 200,\r\n  },\r\n  TurbidityButtonContainer: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    // bottom:0,\r\n    // bottom:70,\r\n    // left:72,\r\n    alignItems: \"center\",\r\n    // justifyContent: 'flex-end',\r\n    backgroundColor: \"transparent\",\r\n    marginTop: 0,\r\n    // paddingTop: 200,\r\n  },\r\n  CondctButtonContainer: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    // bottom:0,\r\n    // bottom:70,\r\n    // left:72,\r\n    alignItems: \"center\",\r\n    // justifyContent: 'flex-end',\r\n    backgroundColor: \"transparent\",\r\n    marginTop: 0,\r\n    // paddingTop: 200,\r\n  },\r\n\r\n  StatusContainer: {\r\n    postion: \"absolute\",\r\n    width: deviceWidth,\r\n    top: \"20%\",\r\n    height: \"100%\",\r\n    // backgroundColor:\"black\",\r\n  },\r\n\r\n  StatusBarContainerHead: {\r\n    postion: \"absolute\",\r\n    width: deviceWidth,\r\n    //   marginLeft:20,\r\n    height: \"65%\",\r\n    bottom: 0,\r\n    top: 0,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    // flexDirection: 'row',\r\n    borderStyle: \"solid\",\r\n    borderWidth: 0,\r\n    borderRadius: 25,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 6,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 10,\r\n\r\n    elevation: 12,\r\n  },\r\n\r\n  StatusBarHead: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    color: \"black\",\r\n  },\r\n\r\n  StatusBarContainer: {\r\n    postion: \"absolute\",\r\n    width: deviceWidth - 38,\r\n    // marginLeft:19,\r\n    bottom: 0,\r\n    top: \"7.5%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    flexDirection: \"row\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#808080\",\r\n    borderTopEndRadius: 25,\r\n    borderTopLeftRadius: 25,\r\n  },\r\n\r\n  StatusBarContainer2: {\r\n    postion: \"absolute\",\r\n    width: deviceWidth - 38,\r\n    // marginLeft:19,\r\n    bottom: 0,\r\n    top: \"7.3%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    flexDirection: \"row\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"white\",\r\n    borderBottomEndRadius: 25,\r\n    borderBottomLeftRadius: 25,\r\n  },\r\n\r\n  StatusBar: {\r\n    postion: \"absolute\",\r\n    width: deviceWidth / 2 - 20,\r\n    fontSize: 20,\r\n    // height:\"40%\",\r\n    // borderWidth: 1,\r\n    textAlign: \"center\",\r\n    padding: \"15%\",\r\n    paddingBottom: \"18%\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    // borderRadius:25,\r\n    // borderTopWidth:0,\r\n    // borderLeftWidth:0,\r\n    // borderColor: 'rgba(0, 0, 0, 0.1)',\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  StatusBarLeft: {\r\n    postion: \"absolute\",\r\n    width: deviceWidth / 2 - 20,\r\n    fontSize: 20,\r\n    // height:\"40%\",\r\n    borderRightWidth: 1,\r\n\r\n    textAlign: \"center\",\r\n    padding: \"15%\",\r\n    paddingBottom: \"18%\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    // borderRadius:25,\r\n    // borderTopWidth:0,\r\n    // borderLeftWidth:0,\r\n    borderColor: \"rgba(0, 0, 0, 0.1)\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n\r\n  headContainer: {\r\n    flex: 1,\r\n    position: \"absolute\",\r\n    width: deviceWidth,\r\n    height: \"20%\",\r\n  },\r\n  previousContainer: {\r\n    // flex: 1,\r\n    // position:\"absolute\",\r\n    width: deviceWidth,\r\n    alignContent:\"center\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    top: \"5%\",\r\n    height: \"13%\",\r\n    backgroundColor: \"white\",\r\n    borderStyle: \"solid\",\r\n    // borderTopWidth:1,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#D3D3D3\",\r\n    \r\n  },\r\n  resultsContainer: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    alignContent:\"center\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    width: deviceWidth,\r\n    // top:\"65%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 0,\r\n    borderColor: \"#D3D3D3\",\r\n    borderTopEndRadius: 25,\r\n    borderTopLeftRadius: 25,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: -2,\r\n    },\r\n    shadowOpacity: 0.15,\r\n    shadowRadius: 10,\r\n\r\n    elevation: 12,\r\n    marginTop:90\r\n  },\r\n  headContent: {\r\n    flex: 1,\r\n    // width:Dimensions.get(\"window\").width,\r\n    // height: \"10%\",\r\n  },\r\n\r\n  PhButton: {\r\n    postion: \"absolute\",\r\n    width: 150,\r\n    borderWidth: 1,\r\n    padding: 25,\r\n    borderTopWidth: 0,\r\n    borderLeftWidth: 0,\r\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  TempButton: {\r\n    postion: \"absolute\",\r\n    width: 150,\r\n    borderWidth: 1,\r\n    padding: 25,\r\n    borderBottomWidth: 0,\r\n    borderLeftWidth: 0,\r\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  TurbidityButton: {\r\n    postion: \"absolute\",\r\n    width: 150,\r\n    borderWidth: 1,\r\n    padding: 25,\r\n    borderTopWidth: 0,\r\n    borderRightWidth: 0,\r\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  CondctButton: {\r\n    postion: \"absolute\",\r\n    width: 150,\r\n    borderWidth: 1,\r\n    padding: 25,\r\n    borderBottomWidth: 0,\r\n    borderRightWidth: 0,\r\n    borderColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  pieChart: {\r\n    postion: \"absolute\",\r\n    top: 50,\r\n    left: -50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    marginTop: 120,\r\n  },\r\n\r\n  pieChartContainer: {\r\n    // flex: 1,\r\n    postion: \"absolute\",\r\n    top: 50,\r\n    // left:-27,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    marginTop: 120,\r\n    // paddingTop: 200,\r\n  },\r\n\r\n  PieHead: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    color: \"#020058\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}