{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\WaterTestingScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  console.log(data);\n  useEffect(function () {\n    fetch('http://localhost:8080/WaterTests').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).then(function (json) {\n      return setData(json);\n    }).then(function (json) {\n      return setData(json);\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }\n  }, \"Loading...\") : React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      color: 'green',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, data.title), React.createElement(Text, {\n    style: {\n      fontSize: 14,\n      color: 'green',\n      textAlign: 'center',\n      paddingBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Articles:\"), React.createElement(FlatList, {\n    data: data.articles,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, item.id + '. ' + item.title);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })));\n}\n;","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/WaterTestingScreen.js"],"names":["React","useEffect","useState","App","isLoading","setLoading","data","setData","console","log","fetch","then","response","json","catch","error","finally","flex","padding","flexDirection","justifyContent","fontSize","color","textAlign","title","paddingBottom","articles","index","id","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACID,QAAQ,CAAC,IAAD,CADZ;AAAA;AAAA,MACrBE,SADqB;AAAA,MACVC,UADU;;AAAA,mBAEJH,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,MAErBI,IAFqB;AAAA,MAEfC,OAFe;;AAG5BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAD,CAAjB;AAAA,KAFR,EAGGF,IAHH,CAGQ,UAACE,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAD,CAAjB;AAAA,KAHR,EAIGF,IAJH,CAIQ,UAACE,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAD,CAAjB;AAAA,KAJR,EAKGF,IALH,CAKQ,UAACE,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAD,CAAjB;AAAA,KALR,EAMGC,KANH,CAMS,UAACC,KAAD;AAAA,aAAWP,OAAO,CAACO,KAAR,CAAcA,KAAd,CAAX;AAAA,KANT,EAOGC,OAPH,CAOW;AAAA,aAAMX,UAAU,CAAC,KAAD,CAAhB;AAAA,KAPX;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEY,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GACR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,IAAI,EAAE,CAAR;AAAWE,MAAAA,aAAa,EAAE,QAA1B;AAAoCC,MAAAA,cAAc,EAAG;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE,OAAvB;AAAgCC,MAAAA,SAAS,EAAE;AAA3C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoEjB,IAAI,CAACkB,KAAzE,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE,OAAvB;AAAgCC,MAAAA,SAAS,EAAE,QAA3C;AAAqDE,MAAAA,aAAa,EAAE;AAApE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEnB,IAAI,CAACoB,QADb;AAEE,IAAA,YAAY,EAAE,4BAASC,KAAT;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,aAAmBA,EAAnB;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACD,EAAL,GAAU,IAAV,GAAiBC,IAAI,CAACL,KAA7B,CADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFJ,CAFF;AAkBD;AAAA","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, Text, View } from 'react-native';\r\n\r\nexport default function App() {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/WaterTests')\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .then((json) => setData(json))\r\n      .then((json) => setData(json))\r\n      .then((json) => setData(json))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <View style={{ flex: 1, padding: 24 }}>\r\n      {isLoading ? <Text>Loading...</Text> : \r\n      ( <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\r\n          <Text style={{ fontSize: 18, color: 'green', textAlign: 'center'}}>{data.title}</Text>\r\n          <Text style={{ fontSize: 14, color: 'green', textAlign: 'center', paddingBottom: 10}}>Articles:</Text>\r\n          <FlatList\r\n            data={data.articles}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n              <Text>{item.id + '. ' + item.title}</Text>\r\n            )}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}