{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\WaterTestingScreen.js\",\n    _this = this;\n\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport * as data from \"../assets/TestsResults.json\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nexport default function WaterTestingScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dataPie = {\n    labels: [, \"pH\", \"Temp\", \"Turbidity\", \"Conductivity\"],\n    data: [, data.value_params.ph * 7.14 / 100, data.value_params.temp / 100, data.value_params.turbidity * 2 / 100, data.value_params.conduct * 2 / 100]\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.StatusBarContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.StatusBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Conductivity\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 67\n    }\n  }), data.value_params.conduct, \" (S/m)\")), React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.StatusBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Conductivity\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 67\n    }\n  }), data.value_params.conduct, \" (S/m)\"))), React.createElement(View, {\n    style: styles.pieChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(ProgressChart, {\n    data: dataPie,\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    strokeWidth: 12,\n    radius: 27,\n    chartConfig: {\n      backgroundColor: \"transparent\",\n      backgroundGradientFrom: \"transparent\",\n      backgroundGradientTo: \"transparent\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(3, 0, 150, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(2, 0, 88, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#fff\"\n      }\n    },\n    hideLegend: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.PhTempContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.PhButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"pH\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 57\n    }\n  }), data.value_params.ph)), React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.TempButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Temp\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 59\n    }\n  }), data.value_params.temp, \"\\xB0C\"))), React.createElement(View, {\n    style: styles.TurbidityCndctContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.TurbidityButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Turbidity\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 66\n    }\n  }), data.value_params.turbidity, \" Ntu\")), React.createElement(TouchableHighlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.CondctButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.Measurement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Conductivity\"), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 67\n    }\n  }), data.value_params.conduct, \" (S/m)\"))), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \" \"))), \")\");\n}\n;\n\nvar AppButton = function AppButton(_ref2) {\n  var onPress = _ref2.onPress,\n      title = _ref2.title;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.appButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nvar MyActivityIndicator = function MyActivityIndicator() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 8\n    }\n  }, \"//size can be \\\"small\\\" or \\\"large\\\"\", React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  Measurement: {\n    fontWeight: 'bold'\n  },\n  HeadText: {\n    position: \"absolute\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    color: \"white\",\n    top: 83,\n    left: 30\n  },\n  HeadTextCap: {\n    position: \"absolute\",\n    fontSize: 12,\n    color: \"#D1E1FF\",\n    top: 113,\n    left: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"#EFFBFF\"\n  },\n  PhButtonContainer: {\n    postion: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TempButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  TurbidityButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  CondctButtonContainer: {\n    postion: \"absolute\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    marginTop: 0\n  },\n  StatusBarContainer: {\n    postion: \"absolute\",\n    width: \"100%\",\n    bottom: 0,\n    top: 200,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 0,\n    flexDirection: 'row'\n  },\n  StatusBar: {\n    postion: 'absolute',\n    width: 300,\n    borderWidth: 3,\n    padding: 25,\n    borderRadius: 10,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  headContainer: {\n    flex: 1,\n    position: \"absolute\",\n    width: Dimensions.get(\"window\").width,\n    height: \"20%\"\n  },\n  headContent: {\n    flex: 1\n  },\n  PhButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  TempButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  TurbidityButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  CondctButton: {\n    postion: 'absolute',\n    width: 150,\n    borderWidth: 1,\n    padding: 25,\n    borderBottomWidth: 0,\n    borderRightWidth: 0,\n    borderColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundColor: 'white'\n  },\n  pieChart: {\n    postion: \"absolute\",\n    top: 100,\n    left: -27,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    marginTop: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/WaterTestingScreen.js"],"names":["React","useEffect","useState","LinearGradient","Spinner","data","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","WaterTestingScreen","navigation","dataPie","labels","value_params","ph","temp","turbidity","conduct","flex","padding","flexDirection","justifyContent","styles","StatusBarContainer","StatusBar","Measurement","pieChart","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","PhTempContainer","PhButton","TempButton","TurbidityCndctContainer","TurbidityButton","CondctButton","AppButton","onPress","title","appButtonContainer","appButtonText","MyActivityIndicator","StyleSheet","create","elevation","paddingVertical","paddingHorizontal","fontSize","fontWeight","alignSelf","textTransform","HeadText","position","top","left","HeadTextCap","container","alignItems","PhButtonContainer","postion","bottom","marginTop","TempButtonContainer","TurbidityButtonContainer","CondctButtonContainer","borderWidth","borderColor","headContainer","height","headContent","borderTopWidth","borderLeftWidth","borderBottomWidth","borderRightWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AAEA,OAAO,KAAKC,IAAZ;AACA,SACIC,SADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,aAJJ,EAKIC,iBALJ,EAMIC,eANJ,QAOS,wBAPT;;;AAWE,eAAe,SAASC,kBAAT,OAA0C;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAgBzD,MAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,GAAE,IAAF,EAAQ,MAAR,EAAgB,WAAhB,EAA4B,cAA5B,CADM;AAEdV,IAAAA,IAAI,EAAE,GAAGA,IAAI,CAACW,YAAL,CAAkBC,EAAlB,GAAqB,IAAtB,GAA4B,GAA9B,EAAmCZ,IAAI,CAACW,YAAL,CAAkBE,IAAlB,GAAuB,GAA1D,EAAgEb,IAAI,CAACW,YAAL,CAAkBG,SAAlB,GAA4B,CAA7B,GAAgC,GAA/F,EAAqGd,IAAI,CAACW,YAAL,CAAkBI,OAAlB,GAA0B,CAA3B,GAA8B,GAAlI;AAFQ,GAAhB;AAWA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAE,CAAR;AAAWE,MAAAA,aAAa,EAAE,QAA1B;AAAoCC,MAAAA,cAAc,EAAG;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpD,EAEGvB,IAAI,CAACW,YAAL,CAAkBI,OAFrB,WADJ,CADF,EAOE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIK,MAAM,CAACE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpD,EAEGvB,IAAI,CAACW,YAAL,CAAkBI,OAFrB,WADJ,CAPF,CAjBE,EAgCF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIK,MAAM,CAACI,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,aAAD;AACA,IAAA,IAAI,EAAEf,OADN;AAEA,IAAA,KAAK,EAAEgB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAFhC;AAGA,IAAA,MAAM,EAAE,GAHR;AAIA,IAAA,WAAW,EAAE,EAJb;AAKA,IAAA,MAAM,EAAE,EALR;AAMA,IAAA,WAAW,EAAE;AACTC,MAAAA,eAAe,EAAE,aADR;AAETC,MAAAA,sBAAsB,EAAE,aAFf;AAGTC,MAAAA,oBAAoB,EAAE,aAHb;AAITC,MAAAA,aAAa,EAAE,CAJN;AAKTC,MAAAA,KAAK,EAAE;AAAA,YAACC,OAAD,uEAAW,CAAX;AAAA,oCAAoCA,OAApC;AAAA,OALE;AAMTC,MAAAA,UAAU,EAAE;AAAA,YAACD,OAAD,uEAAW,CAAX;AAAA,mCAAmCA,OAAnC;AAAA,OANH;AAOTE,MAAAA,KAAK,EAAE;AACPC,QAAAA,YAAY,EAAE;AADP,OAPE;AAUTC,MAAAA,YAAY,EAAE;AACdC,QAAAA,CAAC,EAAE,GADW;AAEdC,QAAAA,WAAW,EAAE,GAFC;AAGdC,QAAAA,MAAM,EAAE;AAHM;AAVL,KANb;AAsBA,IAAA,UAAU,EAAE,KAtBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EA2BA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIpB,MAAM,CAACqB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIrB,MAAM,CAACsB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,EAEGvB,IAAI,CAACW,YAAL,CAAkBC,EAFrB,CADJ,CADF,EAOE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIQ,MAAM,CAACuB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAC4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5C,EAEGvB,IAAI,CAACW,YAAL,CAAkBE,IAFrB,UADJ,CAPF,CA3BA,EA0CA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIO,MAAM,CAACwB,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIxB,MAAM,CAACyB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIzB,MAAM,CAACG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EACmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnD,EAEGvB,IAAI,CAACW,YAAL,CAAkBG,SAFrB,SADJ,CADF,EAOE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIM,MAAM,CAAC0B,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpD,EAEGvB,IAAI,CAACW,YAAL,CAAkBI,OAFrB,WADJ,CAPF,CA1CA,EA0DQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA1DR,CAhCE,CAFN,MAFF;AAsGD;AAAA;;AAGC,IAAMgC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,MAAYC,KAAZ,SAAYA,KAAZ;AAAA,SAChB,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,OAA3B;AAAoC,IAAA,KAAK,EAAE5B,MAAM,CAAC8B,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAAC+B,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCF,KAApC,CADF,CADgB;AAAA,CAAlB;;AAMA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACnC,SACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEpC,MAAAA,IAAI,EAAE,CAAR;AAAWG,MAAAA,cAAc,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEJ,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,CADN;AAMA,CAPC;;AAWA,IAAMC,MAAM,GAAGiC,UAAU,CAACC,MAAX,CAAkB;AAE/BJ,EAAAA,kBAAkB,EAAE;AAChBK,IAAAA,SAAS,EAAE,CADK;AAEhB3B,IAAAA,eAAe,EAAE,SAFD;AAGhBQ,IAAAA,YAAY,EAAE,EAHE;AAIhBoB,IAAAA,eAAe,EAAE,EAJD;AAKhBC,IAAAA,iBAAiB,EAAE;AALH,GAFW;AAS7BN,EAAAA,aAAa,EAAE;AACbO,IAAAA,QAAQ,EAAE,EADG;AAEb1B,IAAAA,KAAK,EAAE,MAFM;AAGb2B,IAAAA,UAAU,EAAE,MAHC;AAIbC,IAAAA,SAAS,EAAE,QAJE;AAKbC,IAAAA,aAAa,EAAE;AALF,GATc;AAiB7BtC,EAAAA,WAAW,EAAE;AAEXoC,IAAAA,UAAU,EAAC;AAFA,GAjBgB;AAsB7BG,EAAAA,QAAQ,EAAC;AACPC,IAAAA,QAAQ,EAAC,UADF;AAGPL,IAAAA,QAAQ,EAAC,EAHF;AAIPC,IAAAA,UAAU,EAAC,MAJJ;AAKP3B,IAAAA,KAAK,EAAC,OALC;AAMPgC,IAAAA,GAAG,EAAC,EANG;AAOPC,IAAAA,IAAI,EAAC;AAPE,GAtBoB;AAgC7BC,EAAAA,WAAW,EAAC;AACVH,IAAAA,QAAQ,EAAC,UADC;AAEVL,IAAAA,QAAQ,EAAC,EAFC;AAIV1B,IAAAA,KAAK,EAAC,SAJI;AAKVgC,IAAAA,GAAG,EAAC,GALM;AAMVC,IAAAA,IAAI,EAAC;AANK,GAhCiB;AAyC7BE,EAAAA,SAAS,EAAE;AACTnD,IAAAA,IAAI,EAAE,CADG;AAEToD,IAAAA,UAAU,EAAE,QAFH;AAGTjD,IAAAA,cAAc,EAAE,UAHP;AAITS,IAAAA,eAAe,EAAE;AAJR,GAzCkB;AAgD/ByC,EAAAA,iBAAiB,EAAC;AAEhBC,IAAAA,OAAO,EAAC,UAFQ;AAGhBC,IAAAA,MAAM,EAAC,CAHS;AAMhBH,IAAAA,UAAU,EAAE,QANI;AAQhBxC,IAAAA,eAAe,EAAE,aARD;AAShB4C,IAAAA,SAAS,EAAE;AATK,GAhDa;AA4D/BC,EAAAA,mBAAmB,EAAC;AAElBH,IAAAA,OAAO,EAAC,UAFU;AAKlBF,IAAAA,UAAU,EAAE,QALM;AAOlBxC,IAAAA,eAAe,EAAE,aAPC;AAQlB4C,IAAAA,SAAS,EAAE;AARO,GA5DW;AAuE/BE,EAAAA,wBAAwB,EAAC;AAEvBJ,IAAAA,OAAO,EAAC,UAFe;AAMvBF,IAAAA,UAAU,EAAE,QANW;AAQvBxC,IAAAA,eAAe,EAAE,aARM;AASvB4C,IAAAA,SAAS,EAAE;AATY,GAvEM;AAmF/BG,EAAAA,qBAAqB,EAAC;AAEpBL,IAAAA,OAAO,EAAC,UAFY;AAMpBF,IAAAA,UAAU,EAAE,QANQ;AAQpBxC,IAAAA,eAAe,EAAE,aARG;AASpB4C,IAAAA,SAAS,EAAE;AATS,GAnFS;AAgG/BnD,EAAAA,kBAAkB,EAAC;AACjBiD,IAAAA,OAAO,EAAC,UADS;AAEjB3C,IAAAA,KAAK,EAAC,MAFW;AAGjB4C,IAAAA,MAAM,EAAC,CAHU;AAIjBP,IAAAA,GAAG,EAAC,GAJa;AAKjBI,IAAAA,UAAU,EAAE,QALK;AAMjBjD,IAAAA,cAAc,EAAE,UANC;AAOjBS,IAAAA,eAAe,EAAE,aAPA;AAQjB4C,IAAAA,SAAS,EAAE,CARM;AASjBtD,IAAAA,aAAa,EAAE;AATE,GAhGY;AA4G/BI,EAAAA,SAAS,EAAC;AACRgD,IAAAA,OAAO,EAAC,UADA;AAER3C,IAAAA,KAAK,EAAC,GAFE;AAGRiD,IAAAA,WAAW,EAAE,CAHL;AAIR3D,IAAAA,OAAO,EAAE,EAJD;AAKRmB,IAAAA,YAAY,EAAC,EALL;AAQRyC,IAAAA,WAAW,EAAE,oBARL;AASRjD,IAAAA,eAAe,EAAE;AATT,GA5GqB;AAwH/BkD,EAAAA,aAAa,EAAE;AACX9D,IAAAA,IAAI,EAAE,CADK;AAEX+C,IAAAA,QAAQ,EAAC,UAFE;AAGXpC,IAAAA,KAAK,EAACF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAHpB;AAIXoD,IAAAA,MAAM,EAAC;AAJI,GAxHgB;AA8H/BC,EAAAA,WAAW,EAAE;AACThE,IAAAA,IAAI,EAAE;AADG,GA9HkB;AAoI/B0B,EAAAA,QAAQ,EAAE;AACR4B,IAAAA,OAAO,EAAC,UADA;AAER3C,IAAAA,KAAK,EAAC,GAFE;AAGRiD,IAAAA,WAAW,EAAE,CAHL;AAIR3D,IAAAA,OAAO,EAAE,EAJD;AAKRgE,IAAAA,cAAc,EAAC,CALP;AAMRC,IAAAA,eAAe,EAAC,CANR;AAORL,IAAAA,WAAW,EAAE,oBAPL;AAQRjD,IAAAA,eAAe,EAAE;AART,GApIqB;AA8I/Be,EAAAA,UAAU,EAAE;AACV2B,IAAAA,OAAO,EAAC,UADE;AAEV3C,IAAAA,KAAK,EAAC,GAFI;AAGViD,IAAAA,WAAW,EAAE,CAHH;AAIV3D,IAAAA,OAAO,EAAE,EAJC;AAKVkE,IAAAA,iBAAiB,EAAC,CALR;AAMVD,IAAAA,eAAe,EAAC,CANN;AAOVL,IAAAA,WAAW,EAAE,oBAPH;AAQVjD,IAAAA,eAAe,EAAE;AARP,GA9ImB;AAwJ/BiB,EAAAA,eAAe,EAAE;AACfyB,IAAAA,OAAO,EAAC,UADO;AAEf3C,IAAAA,KAAK,EAAC,GAFS;AAGfiD,IAAAA,WAAW,EAAE,CAHE;AAIf3D,IAAAA,OAAO,EAAE,EAJM;AAKfgE,IAAAA,cAAc,EAAC,CALA;AAMfG,IAAAA,gBAAgB,EAAC,CANF;AAOfP,IAAAA,WAAW,EAAE,oBAPE;AAQfjD,IAAAA,eAAe,EAAE;AARF,GAxJc;AAkK/BkB,EAAAA,YAAY,EAAE;AACZwB,IAAAA,OAAO,EAAC,UADI;AAEZ3C,IAAAA,KAAK,EAAC,GAFM;AAGZiD,IAAAA,WAAW,EAAE,CAHD;AAIZ3D,IAAAA,OAAO,EAAE,EAJG;AAKZkE,IAAAA,iBAAiB,EAAC,CALN;AAMZC,IAAAA,gBAAgB,EAAC,CANL;AAOZP,IAAAA,WAAW,EAAE,oBAPD;AAQZjD,IAAAA,eAAe,EAAE;AARL,GAlKiB;AA6K/BJ,EAAAA,QAAQ,EAAC;AAEL8C,IAAAA,OAAO,EAAC,UAFH;AAGLN,IAAAA,GAAG,EAAC,GAHC;AAILC,IAAAA,IAAI,EAAC,CAAC,EAJD;AAKLG,IAAAA,UAAU,EAAE,QALP;AAMLjD,IAAAA,cAAc,EAAE,UANX;AAOLS,IAAAA,eAAe,EAAE,aAPZ;AAQL4C,IAAAA,SAAS,EAAE;AARN;AA7KsB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList,Button, Text, View, StyleSheet,ActivityIndicator } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\n// import TestsResults from '../assets/TestsResults.json';\r\nimport * as data from '../assets/TestsResults.json';\r\nimport {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n\r\n  import { Dimensions,TouchableHighlight  } from \"react-native\";\r\n\r\n  export default function WaterTestingScreen({navigation}) {\r\n\r\n    \r\n  // const [isLoading, setLoading] = useState(true);\r\n  // const [data, setData] = useState([]);\r\n  // console.log(data);\r\n\r\n  \r\n  // useEffect(() => {\r\n  //   fetch(TestsResults)\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setData(json))\r\n  //     .catch((error) => console.error(error))\r\n  //     .finally(() => setLoading(false));\r\n  // }, []);\r\n\r\n  const dataPie = {\r\n    labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n    data: [,(data.value_params.ph*7.14)/100, data.value_params.temp/100, (data.value_params.turbidity*2)/100, (data.value_params.conduct*2)/100]\r\n  };\r\n\r\n//   const dataPie = {\r\n//     labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n//     data: [,data.ph, data.temp, data.turbidity, data.conductivity]\r\n//   };\r\n\r\n\r\n  return (\r\n\r\n    <View style={{ flex: 1, padding: 0 }}>\r\n      {/* {isLoading ? <Text>Loading...</Text> :  */}         \r\n          <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\r\n\r\n\r\n        \r\n        {/* <View style = {styles.headContainer}>\r\n            <LinearGradient\r\n                // Button Linear Gradient\r\n                colors={['#020058', '#030096']}\r\n                start={{ x: 1, y: 1 }}\r\n                end={{ x: 0, y: 1 }}\r\n                style={styles.headContent}\r\n                >\r\n                <Text style={styles.HeadText}>Quality test</Text>\r\n                <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n            </LinearGradient>\r\n        </View> */}\r\n\r\n        <View style = {styles.StatusBarContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.StatusBar}>\r\n              <Text style={styles.Measurement}>Conductivity</Text><br/> \r\n                {data.value_params.conduct} (S/m)\r\n              </Text>\r\n          </TouchableHighlight>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.StatusBar}>\r\n              <Text style={styles.Measurement}>Conductivity</Text><br/> \r\n                {data.value_params.conduct} (S/m)\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n\r\n        <View style = {styles.pieChart}>\r\n                {/* <Text style = {styles.LocationText}><Text style={styles.Measurement}>Location:</Text>   {data.location}</Text> */}\r\n                <ProgressChart\r\n                data={dataPie}\r\n                width={Dimensions.get(\"window\").width}\r\n                height={220}\r\n                strokeWidth={12}\r\n                radius={27}\r\n                chartConfig={{\r\n                    backgroundColor: \"transparent\",\r\n                    backgroundGradientFrom: \"transparent\",\r\n                    backgroundGradientTo: \"transparent\",\r\n                    decimalPlaces: 2, // optional, defaults to 2dp\r\n                    color: (opacity = 1) => `rgba(3, 0, 150, ${opacity})`,\r\n                    labelColor: (opacity = 1) => `rgba(2, 0, 88, ${opacity})`,\r\n                    style: {\r\n                    borderRadius: 16,\r\n                    },\r\n                    propsForDots: {\r\n                    r: \"6\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#fff\"\r\n                    }\r\n                }}\r\n                hideLegend={false}\r\n                />\r\n\r\n        <View style = {styles.PhTempContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.PhButton}>\r\n              <Text style={styles.Measurement}>pH</Text><br/>\r\n                {data.value_params.ph}\r\n              </Text>\r\n          </TouchableHighlight>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.TempButton}>\r\n              <Text style={styles.Measurement}>Temp</Text><br/>\r\n                {data.value_params.temp}°C\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n  \r\n        <View style = {styles.TurbidityCndctContainer}>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.TurbidityButton}>\r\n              <Text style = {styles.Measurement}>Turbidity</Text><br/>\r\n                {data.value_params.turbidity} Ntu\r\n              </Text>\r\n          </TouchableHighlight>\r\n          <TouchableHighlight>\r\n              <Text style = {styles.CondctButton}>\r\n              <Text style={styles.Measurement}>Conductivity</Text><br/> \r\n                {data.value_params.conduct} (S/m)\r\n              </Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n    \r\n\r\n                <Text> </Text>\r\n                {/* <Text style = {styles.LocationText}><Text style={styles.Measurement}>Water quality:</Text> {data.predicted_water_type}</Text> */}\r\n\r\n            </View>  \r\n        </View>\r\n      )\r\n    </View>\r\n  );\r\n};\r\n\r\n  // add this to a button\r\n  const AppButton = ({ onPress, title }) => (\r\n    <TouchableOpacity onPress={onPress} style={styles.appButtonContainer}>\r\n      <Text style={styles.appButtonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const MyActivityIndicator = () => {\r\n\treturn (\r\n      \t<View style={{ flex: 1, justifyContent: \"center\"}}>\r\n      \t\t//size can be \"small\" or \"large\"\r\n\t\t\t<ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n      \t</View>\r\n    );\r\n}\r\n\r\n// export default MyActivityIndicator;\r\n\r\n  const styles = StyleSheet.create({\r\n\r\n    appButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n      },\r\n      appButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n      },\r\n\r\n      Measurement: {\r\n        // fontSize:16,\r\n        fontWeight:'bold',\r\n      },\r\n\r\n      HeadText:{\r\n        position:\"absolute\",\r\n        // fontFamily:\"ubuntu\",\r\n        fontSize:22,\r\n        fontWeight:\"bold\",\r\n        color:\"white\",\r\n        top:83,\r\n        left:30,\r\n      },\r\n  \r\n      HeadTextCap:{\r\n        position:\"absolute\",\r\n        fontSize:12,\r\n        // fontWeight:\"bold\",\r\n        color:\"#D1E1FF\",\r\n        top:113,\r\n        left:30,\r\n      },\r\n\r\n      container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"#EFFBFF\",\r\n    },\r\n\r\n    PhButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      bottom:0,\r\n      // top:170,\r\n      // left:-80,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    TempButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      // bottom:-70,\r\n      // left:-80,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    TurbidityButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      // bottom:0,\r\n      // bottom:70,\r\n      // left:72,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n    CondctButtonContainer:{\r\n      // flex: 1,\r\n      postion:\"absolute\",\r\n      // bottom:0,\r\n      // bottom:70,\r\n      // left:72,\r\n      alignItems: \"center\",\r\n      // justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0\r\n      // paddingTop: 200,\r\n    },\r\n\r\n    StatusBarContainer:{\r\n      postion:\"absolute\",\r\n      width:\"100%\",\r\n      bottom:0,\r\n      top:200,\r\n      alignItems: \"center\",\r\n      justifyContent: 'flex-end',\r\n      backgroundColor: \"transparent\",\r\n      marginTop: 0,\r\n      flexDirection: 'row',\r\n    },\r\n\r\n    StatusBar:{\r\n      postion:'absolute',\r\n      width:300,\r\n      borderWidth: 3,\r\n      padding: 25,\r\n      borderRadius:10,\r\n      // borderTopWidth:0,\r\n      // borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n    },\r\n\r\n    headContainer: {\r\n        flex: 1,\r\n        position:\"absolute\",\r\n        width:Dimensions.get(\"window\").width,\r\n        height:\"20%\",\r\n    },\r\n    headContent: {\r\n        flex: 1,\r\n        // width:Dimensions.get(\"window\").width,\r\n        // height: \"10%\",\r\n    },\r\n\r\n    PhButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderTopWidth:0,\r\n      borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    TempButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderBottomWidth:0,\r\n      borderLeftWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    TurbidityButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderTopWidth:0,\r\n      borderRightWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n    CondctButton: {\r\n      postion:'absolute',\r\n      width:150,\r\n      borderWidth: 1,\r\n      padding: 25,\r\n      borderBottomWidth:0,\r\n      borderRightWidth:0,\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      backgroundColor: 'white'\r\n   },\r\n\r\n    pieChart:{\r\n        // flex: 1,\r\n        postion:\"absolute\",\r\n        top:100,\r\n        left:-27,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"transparent\",\r\n        marginTop: 100,\r\n        // paddingTop: 200,\r\n      },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}