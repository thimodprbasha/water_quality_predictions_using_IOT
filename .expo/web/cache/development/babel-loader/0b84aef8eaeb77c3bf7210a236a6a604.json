{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\WaterTestingScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  console.log(data);\n  useEffect(function () {\n    fetch('https://raw.githubusercontent.com/adhithiravi/React-Hooks-Examples/master/testAPI.json').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }, \"Loading...\") : React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: data.articles,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, item.id + '. ' + item.title);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), React.createElement(LinearGradient, {\n    colors: ['#001A4B', '#002B7B'],\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    style: styles.headContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.HeadText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Quality test\"), React.createElement(Text, {\n    style: styles.HeadTextCap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Water quality results\")), React.createElement(View, {\n    style: styles.pieChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, React.createElement(ProgressChart, {\n    data: dataPie,\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    strokeWidth: 12,\n    radius: 27,\n    chartConfig: {\n      backgroundColor: \"transparent\",\n      backgroundGradientFrom: \"transparent\",\n      backgroundGradientTo: \"transparent\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(3, 0, 150, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(2, 0, 88, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#fff\"\n      }\n    },\n    hideLegend: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }))));\n}\n;\nvar dataPie = {\n  labels: [, \"pH\", \"Temp\", \"Turbidity\", \"Conductivity\"],\n  data: [, 0.4, 0.7, 0.8, 0.2]\n};\nvar styles = StyleSheet.create({\n  pieChart: {\n    postion: \"absolute\",\n    bottom: 200,\n    left: -27,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"transparent\",\n    paddingTop: 300\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/WaterTestingScreen.js"],"names":["React","useEffect","useState","LinearGradient","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","isLoading","setLoading","data","setData","console","log","fetch","then","response","json","catch","error","finally","flex","padding","flexDirection","justifyContent","articles","index","id","item","title","x","y","styles","headContent","HeadText","HeadTextCap","pieChart","dataPie","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","labels","StyleSheet","create","postion","bottom","left","alignItems","paddingTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, Text, View, StyleSheet } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n\r\n  import { Dimensions  } from \"react-native\";\r\n\r\nexport default function App() {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    fetch('https://raw.githubusercontent.com/adhithiravi/React-Hooks-Examples/master/testAPI.json')\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <View style={{ flex: 1, padding: 24 }}>\r\n      {isLoading ? <Text>Loading...</Text> : \r\n      (\r\n          \r\n          <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\r\n          {/* <Text style={{ fontSize: 18, color: 'green', textAlign: 'center'}}>{data.title}</Text> */}\r\n          {/* <Text style={{ fontSize: 14, color: 'green', textAlign: 'center', paddingBottom: 10}}>Articles:</Text> */}\r\n          <FlatList\r\n            data={data.articles}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n              <Text>{item.id + '. ' + item.title}</Text>\r\n            )}\r\n          />\r\n          <LinearGradient\r\n            // Button Linear Gradient\r\n            colors={['#001A4B', '#002B7B']}\r\n            start={{ x: 1, y: 1 }}\r\n            end={{ x: 0, y: 1 }}\r\n            style={styles.headContent}\r\n            >\r\n            <Text style={styles.HeadText}>Quality test</Text>\r\n            <Text style={styles.HeadTextCap}>Water quality results</Text>\r\n        </LinearGradient>\r\n\r\n          <View style = {styles.pieChart}>\r\n     \r\n                <ProgressChart\r\n                data={dataPie}\r\n                width={Dimensions.get(\"window\").width}\r\n                height={220}\r\n                strokeWidth={12}\r\n                radius={27}\r\n                chartConfig={{\r\n                    backgroundColor: \"transparent\",\r\n                    backgroundGradientFrom: \"transparent\",\r\n                    backgroundGradientTo: \"transparent\",\r\n                    decimalPlaces: 2, // optional, defaults to 2dp\r\n                    color: (opacity = 1) => `rgba(3, 0, 150, ${opacity})`,\r\n                    labelColor: (opacity = 1) => `rgba(2, 0, 88, ${opacity})`,\r\n                    style: {\r\n                    borderRadius: 16,\r\n                    },\r\n                    propsForDots: {\r\n                    r: \"6\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#fff\"\r\n                    }\r\n                }}\r\n                hideLegend={false}\r\n                />\r\n\r\n            </View>  \r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst dataPie = {\r\n  \r\n    labels: [,\"pH\", \"Temp\", \"Turbidity\",\"Conductivity\"], // optional\r\n    data: [,0.4, 0.7, 0.8, 0.2]\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n\r\n    pieChart:{\r\n        // flex: 1,\r\n        postion:\"absolute\",\r\n        bottom:200,\r\n        left:-27,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"transparent\",\r\n        paddingTop: 300,\r\n      },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}