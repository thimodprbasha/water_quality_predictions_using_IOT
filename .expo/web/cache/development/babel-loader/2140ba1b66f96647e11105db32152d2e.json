{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\94776\\\\jala-read-1.0\\\\screens\\\\Example.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as testlists from \"../assets/TestLists.json\";\nexport default function Example(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  console.log(data);\n  useEffect(function () {\n    fetch(testlists).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"data.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n}\nvar dataPieChart = {\n  labels: [\"pH\", \"Temp\", \"Turbidity\"],\n  data: [0.4, 0.7, 0.8]\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'flex-end',\n    backgroundColor: \"#EFFBFF\"\n  },\n  headContainer: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  },\n  headContent: {\n    flex: 1,\n    height: \"100%\",\n    alignItems: 'center'\n  },\n  LogoText: {\n    postion: \"absolute\",\n    fontSize: 23,\n    fontWeight: \"bold\",\n    alignItems: 'center',\n    top: 590,\n    color: 'rgba(255, 255, 255, 0.9)'\n  },\n  LogoCapText: {\n    postion: \"absolute\",\n    fontSize: 14,\n    alignItems: 'center',\n    top: 670,\n    color: 'rgba(255, 255, 255, 0.7)'\n  },\n  StartLogo: {\n    postion: \"absolute\",\n    top: 200,\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/94776/jala-read-1.0/screens/Example.js"],"names":["StatusBar","React","useEffect","useState","LinearGradient","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","testlists","Example","navigation","isLoading","setLoading","data","setData","console","log","fetch","then","response","json","catch","error","finally","styles","container","item","id","dataPieChart","labels","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","headContainer","width","Dimensions","get","height","headContent","LogoText","postion","fontSize","fontWeight","top","color","LogoCapText","StartLogo"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import CircleChart from \"react-native-circle-chart\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n  FlatList,\r\n} from \"react-native\";\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart\r\n} from \"react-native-chart-kit\";\r\n\r\nimport { Dimensions  } from \"react-native\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n// import * as data from '../assets/TestsResults.json';\r\nimport * as testlists from '../assets/TestLists.json';\r\n\r\nexport default function Example({navigation}) {\r\n\r\n    // const [isLoading, setLoading] = useState(true);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  console.log(data);\r\n\r\n  \r\n  useEffect(() => {\r\n    fetch(testlists)\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    \r\n    <View style={styles.container}>\r\n        <FlatList\r\n          data={data}\r\n          \r\n          keyExtractor ={(item) => item.id}\r\n          renderItem={({item}) => (\r\n            <Text>data.</Text>\r\n          )}\r\n        />\r\n      </View>\r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst dataPieChart = {\r\n  \r\n  labels: [\"pH\", \"Temp\", \"Turbidity\"], // optional\r\n  data: [0.4, 0.7, 0.8]\r\n};\r\n\r\n// const result = await CircleChart.multiply(3, 7);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: \"#EFFBFF\",\r\n    },\r\n    headContainer: {\r\n        flex: 1,\r\n        width:Dimensions.get(\"window\").width,\r\n        height:Dimensions.get(\"window\").height,\r\n    },\r\n    headContent: {\r\n        flex: 1,\r\n        // width:Dimensions.get(\"window\").width,\r\n        height:\"100%\",\r\n        // justifyContent: 'center',\r\n        alignItems: 'center',\r\n        // flexDirection: 'row',\r\n        // alignItems: 'center',\r\n    },\r\n\r\n    LogoText:{\r\n        postion:\"absolute\",\r\n        fontSize:23,\r\n        fontWeight:\"bold\",\r\n        alignItems: 'center',\r\n        top:590,\r\n        color:'rgba(255, 255, 255, 0.9)',\r\n    },\r\n    LogoCapText:{\r\n        postion:\"absolute\",\r\n        fontSize:14,\r\n        alignItems: 'center',\r\n        // fontWeight:\"bold\",\r\n        top:670,\r\n        color:'rgba(255, 255, 255, 0.7)',\r\n    },\r\n\r\n    StartLogo:{\r\n        postion:\"absolute\",\r\n        top:200,\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        width:100,\r\n        height:100,\r\n    },\r\n\r\n}); "]},"metadata":{},"sourceType":"module"}